{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BoxDrop",
    "require",
    "BoxItem",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "box_prefab",
    "default",
    "type",
    "Prefab",
    "num_rank",
    "tooltip",
    "num_row",
    "super_node",
    "Node",
    "onLoad",
    "Array",
    "prototype",
    "removeByValue",
    "arr",
    "val",
    "i",
    "length",
    "splice",
    "rankList",
    "itemWidth",
    "itemHeight",
    "itemSpace",
    "margin_top",
    "director",
    "getWinSize",
    "height",
    "margin_bottom",
    "margin_left",
    "margin_right",
    "boxPool",
    "NodePool",
    "creaePanleContent",
    "index",
    "createRankContent",
    "updateBeginOriginY",
    "checkPanelEliminatable",
    "replayGame",
    "children",
    "boxDrop_destroy",
    "getComponent",
    "item",
    "shift",
    "console",
    "log",
    "rank_list",
    "origin_x",
    "box",
    "boxDrop_get",
    "active",
    "width",
    "box_c",
    "initBoxItem",
    "boxItem",
    "begin_x",
    "begin_y",
    "end_y",
    "rank",
    "row",
    "color_type",
    "random0To1",
    "resetOriginPos",
    "parent",
    "push",
    "updateAllRankEndY",
    "list_sub",
    "new_box",
    "item_box",
    "list",
    "off_top",
    "j",
    "node",
    "y",
    "exchangeBoxItem",
    "boxItem1",
    "boxItem2",
    "toCheckViable",
    "temp_endy",
    "temp_row",
    "temp_node",
    "list1",
    "list2",
    "temp_beginx",
    "temp_rank",
    "row_index",
    "isViable",
    "setTimeout",
    "bind",
    "wipe_list",
    "tempList",
    "pre_box",
    "item_pre",
    "toAdd",
    "apply",
    "forEach",
    "elem",
    "boxIsSelectState",
    "isRepeatItemInWipe",
    "id",
    "size",
    "get",
    "instantiate",
    "put"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "\r\n\r\nvar BoxDrop = require(\"BoxDrop\");\r\nvar BoxItem = require(\"BoxItem\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        box_prefab:{\r\n            default:null,\r\n            type:cc.Prefab,\r\n        },\r\n\r\n        num_rank:{\r\n            default:10,\r\n            tooltip:\"列数\"\r\n        },\r\n\r\n        num_row:{\r\n            default:10,\r\n            tooltip:\"行数\"\r\n        },\r\n\r\n        super_node:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n        Array.prototype.removeByValue = function(arr,val){\r\n\r\n            for (var i = 0; i<arr.length; i++){\r\n                if(arr[i] === val){\r\n                    arr.splice(i,1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n        // Array.prototype.filterRepeat = function(){  \r\n        //     //直接定义结果数组  \r\n        //     var arr = [];\r\n        //     if(arr.length > 0){\r\n        //         arr.push(this[0]);\r\n        //     }\r\n\r\n        //     for(var i = 1; i < this.length; i++){    //从数组第二项开始循环遍历此数组  \r\n        //         //对元素进行判断：  \r\n        //         //如果数组当前元素在此数组中第一次出现的位置不是i  \r\n        //         //那么我们可以判断第i项元素是重复的，否则直接存入结果数组  \r\n        //         if(this.indexOf(this[i]) == i){  \r\n        //             arr.push(this[i]);  \r\n        //         }  \r\n        //     }  \r\n        //     return arr;  \r\n        // }  \r\n\r\n        this.rankList = [];\r\n\r\n        this.itemWidth = 100;\r\n        this.itemHeight = 100;\r\n\r\n        this.itemSpace = 5;\r\n\r\n        // this.margin_top = (cc.director.getWinSize().height)*0.5 + this.itemHeight*0.5;\r\n        this.margin_top = -(cc.director.getWinSize().height)*0.5 + this.itemHeight*this.num_row + this.itemSpace * (this.num_row - 1) + this.itemHeight*0.5;\r\n        this.margin_bottom = -(cc.director.getWinSize().height)*0.5 - this.itemHeight*0.5;\r\n        this.margin_left =  -this.itemWidth*this.num_rank*0.5 + this.itemSpace*(this.num_rank*0.5-1);\r\n        this.margin_right = this.itemWidth*this.num_rank*0.5 - this.itemSpace*(this.num_rank*0.5-1);\r\n\r\n        //console.log(\"asds  \" + this.margin_top+\"  \"+this.margin_bottom);\r\n\r\n        this.boxPool = new cc.NodePool(\"BoxDrop\");\r\n\r\n        this.creaePanleContent();\r\n    },\r\n\r\n    //创建所有面板的数据\r\n    creaePanleContent:function(){\r\n\r\n        for(let index = 0; index<this.num_rank; index++){\r\n            this.createRankContent(index);\r\n        }\r\n\r\n        this.updateBeginOriginY();\r\n\r\n        this.checkPanelEliminatable();\r\n    },\r\n\r\n    //重新开始游戏\r\n    replayGame:function(){\r\n\r\n        var children = this.super_node.children;\r\n\r\n        while(children.length > 0){\r\n            \r\n            for (var i = 0; i < children.length; ++i) {\r\n                this.boxDrop_destroy(children[i].getComponent(\"BoxDrop\"));\r\n            }            \r\n        }\r\n\r\n        //清空ranklist\r\n        var item;\r\n        while (item = this.rankList.shift()) {\r\n            \r\n        }\r\n        \r\n\r\n        console.log(\"清空成功\");\r\n\r\n        this.creaePanleContent();\r\n    },\r\n\r\n    //创建每一列的数据\r\n    createRankContent:function(index){\r\n\r\n        let rank_list = [];\r\n\r\n        let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*index;\r\n         \r\n        for(let i = 0; i < this.num_row; i++){\r\n\r\n            let box = this.boxDrop_get();\r\n            box.active = true;\r\n\r\n            box.width = this.itemWidth;\r\n            box.height = this.itemHeight;\r\n\r\n            let box_c = box.getComponent(\"BoxDrop\");\r\n            box_c.initBoxItem();\r\n\r\n            box_c.boxItem.begin_x = origin_x;\r\n            box_c.boxItem.begin_y = this.margin_top;\r\n            box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n            box_c.boxItem.rank = index;\r\n            box_c.boxItem.row = i;\r\n            box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n\r\n            box_c.resetOriginPos();\r\n\r\n            box.parent = this.super_node;\r\n\r\n            rank_list.push(box);\r\n        }\r\n\r\n        this.rankList.push(rank_list);\r\n\r\n\r\n    },\r\n\r\n    //更新某一列 end y的数据\r\n    updateAllRankEndY:function(){\r\n\r\n        //看该列的数量是否 小于 this.num_row  少于的话则补充\r\n        for(let i = 0; i<this.num_rank; i++){\r\n\r\n            let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*i;\r\n\r\n            let list_sub = this.rankList[i];\r\n            \r\n            while(list_sub.length < this.num_row){\r\n\r\n                let new_box = this.boxDrop_get();\r\n                new_box.active = true;\r\n\r\n                let box_c = new_box.getComponent(\"BoxDrop\");\r\n\r\n                box_c.boxItem.begin_x = origin_x;\r\n                box_c.boxItem.begin_y = this.margin_top;\r\n                box_c.boxItem.rank = i;\r\n                box_c.boxItem.row = 0;\r\n                box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n                box_c.resetOriginPos();\r\n\r\n                new_box.parent = this.super_node;\r\n\r\n                list_sub.push(new_box);\r\n            }\r\n\r\n\r\n\r\n\r\n            // let list = this.rankList[index];\r\n\r\n            //更新每个元素的end y 位置\r\n            for (let i = 0; i<list_sub.length; i++){\r\n\r\n                let item_box = list_sub[i];\r\n                let box_c = item_box.getComponent(\"BoxDrop\");\r\n\r\n                box_c.boxItem.row = i;\r\n                box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n            }\r\n        }\r\n\r\n        this.updateBeginOriginY();\r\n        \r\n        this.checkPanelEliminatable();\r\n    },\r\n\r\n    /**\r\n     * 更新每一列他们中的每个元素的初始的origin y的值\r\n     */\r\n    updateBeginOriginY:function () {\r\n\r\n        /**\r\n         * 某一列中 从最后开始遍历返回\r\n         * 算出开始掉了的位置\r\n         */\r\n        for (let i = 0; i<this.num_rank; i++){\r\n            let list = this.rankList[i];\r\n\r\n            //判断是否 已达到他的endy 如果还未达到就是 正要掉落\r\n            let off_top = 0;\r\n\r\n            // for(let j = this.num_row-1; j>=0; j--){\r\n            for(let j = 0; j<this.num_row; j++){\r\n                let box = list[j];\r\n\r\n                let box_c = box.getComponent(\"BoxDrop\");\r\n                //box_c.boxItem.begin_y = this.margin_top;\r\n\r\n                if(box_c.node.y !== box_c.boxItem.end_y){\r\n\r\n                    box_c.boxItem.begin_y = this.margin_top + off_top;\r\n                    box_c.node.y = box_c.boxItem.begin_y;\r\n\r\n                    off_top += box_c.node.height;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    \r\n    //交换两个方块的位置\r\n    exchangeBoxItem:function(boxItem1,boxItem2,toCheckViable = true){\r\n\r\n        if(boxItem1.rank === boxItem2.rank){\r\n            //同一列的\r\n            let list = this.rankList[boxItem1.rank];\r\n\r\n            //交换位置\r\n            let temp_endy = boxItem2.end_y;\r\n            boxItem2.end_y = boxItem1.end_y;\r\n            boxItem1.end_y = temp_endy;\r\n\r\n            //交换信息\r\n            let temp_row = boxItem2.row;\r\n\r\n            boxItem2.row = boxItem1.row;\r\n            boxItem1.row = temp_row;            \r\n\r\n            let temp_node = list[boxItem1.row];\r\n            list[boxItem1.row] = list[boxItem2.row];\r\n            list[boxItem2.row] = temp_node;\r\n\r\n\r\n        }else if(boxItem1.row === boxItem2.row){\r\n            //同一行的\r\n            let list1 = this.rankList[boxItem1.rank];\r\n            let list2 = this.rankList[boxItem2.rank];\r\n\r\n            //交换位置\r\n            let temp_beginx = boxItem2.begin_x;\r\n            boxItem2.begin_x = boxItem1.begin_x;\r\n            boxItem1.begin_x = temp_beginx;\r\n\r\n            //交换信息\r\n            let temp_rank = boxItem2.rank;\r\n            boxItem2.rank = boxItem1.rank;\r\n            boxItem1.rank = temp_rank;\r\n\r\n            let row_index = boxItem1.row;\r\n            let temp_node = list1[row_index];\r\n            list1[row_index] = list2[row_index];\r\n            list2[row_index] = temp_node;\r\n        }\r\n\r\n        \r\n        if(toCheckViable){\r\n\r\n            let isViable = this.checkPanelEliminatable();\r\n\r\n            if(!isViable){\r\n\r\n                //不可消除的话 位置再互换回来\r\n                console.log(\"不可消除\");\r\n                setTimeout(function() {\r\n                this.exchangeBoxItem(boxItem2,boxItem1,false); \r\n                }.bind(this), 300);\r\n            }\r\n        }\r\n    },\r\n\r\n    //检测面板所有方块 是否可消除\r\n    checkPanelEliminatable:function(){\r\n\r\n        let wipe_list = [];\r\n\r\n        //判断列 是否有三个以及三个以上的一样的色块连在一起\r\n        for (let i = 0; i<this.num_rank; i++){\r\n            let list = this.rankList[i];\r\n            let tempList = [];\r\n            let pre_box = null;\r\n            for(let j = 0; j<this.num_row; j++){\r\n                let box = list[j];\r\n                if(!pre_box){\r\n                    pre_box = box;\r\n                    tempList.push(box);\r\n                }else{\r\n                    let item_pre = pre_box.getComponent(\"BoxDrop\").boxItem;\r\n                    let item_box = box.getComponent(\"BoxDrop\").boxItem;\r\n\r\n                    let toAdd = false;\r\n                    if(item_pre.color_type === item_box.color_type){\r\n                        tempList.push(box);\r\n                        if(j === (this.num_row-1)){\r\n                            toAdd = true;\r\n                        }\r\n                    }else{\r\n                        toAdd = true;\r\n                    }\r\n\r\n                    if(toAdd){\r\n                        if(tempList.length >= 3){\r\n                            //追加到wipe里面\r\n                            Array.prototype.push.apply(wipe_list,tempList);\r\n\r\n                            tempList.forEach(function(elem){\r\n\r\n                                elem.getComponent(\"BoxDrop\").boxIsSelectState(true);\r\n\r\n                            });\r\n\r\n                        }\r\n                        //清空数组\r\n                        tempList = [];\r\n\r\n                        pre_box = box;\r\n                        tempList.push(box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        function isRepeatItemInWipe(item){\r\n            for(let i = 0; i<wipe_list.length; i++){\r\n                if(wipe_list[i].getComponent(\"BoxDrop\").boxItem.id === item.getComponent(\"BoxDrop\").boxItem.id){\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        //判断行 是否有三个以及三个以上的一样的色块连在一起\r\n        for (let i = 0; i<this.num_row; i++){\r\n            \r\n            let tempList = [];\r\n            let pre_box = null;\r\n            for(let j = 0; j<this.num_rank; j++){\r\n                let box = this.rankList[j][i];\r\n                if(!pre_box){\r\n                    pre_box = box;\r\n                    tempList.push(box);\r\n                }else{\r\n                    let item_pre = pre_box.getComponent(\"BoxDrop\").boxItem;\r\n                    let item_box = box.getComponent(\"BoxDrop\").boxItem;\r\n\r\n                    let toAdd = false;\r\n                    if(item_pre.color_type === item_box.color_type){\r\n                        tempList.push(box);\r\n                        if(j === (this.num_rank-1)){\r\n                            toAdd = true;\r\n                        }\r\n                    }else{\r\n                        toAdd = true;\r\n                    }\r\n\r\n                    if(toAdd){\r\n                        if(tempList.length >= 3){\r\n                            //追加到wipe里面\r\n                            tempList.forEach(function(elem){\r\n\r\n                                if(!isRepeatItemInWipe(elem)){\r\n                                    wipe_list.push(elem);\r\n                                }\r\n\r\n\r\n                            });\r\n\r\n                            tempList.forEach(function(elem){\r\n\r\n                                elem.getComponent(\"BoxDrop\").boxIsSelectState(true);\r\n\r\n                            });\r\n\r\n                        }\r\n                        //清空数组\r\n                        tempList = [];\r\n\r\n                        pre_box = box;\r\n                        tempList.push(box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if(wipe_list.length > 0){\r\n\r\n            //消除掉\r\n            wipe_list.forEach(function(elem){\r\n\r\n                this.boxDrop_destroy(elem.getComponent(\"BoxDrop\"));\r\n\r\n            }.bind(this));\r\n\r\n            this.updateAllRankEndY();    \r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    boxDrop_get:function(){\r\n\r\n        let box = null;\r\n        if(this.boxPool.size() > 0){\r\n            box = this.boxPool.get();\r\n        }else{\r\n            box = cc.instantiate(this.box_prefab);\r\n        }\r\n\r\n        return box;\r\n    },\r\n\r\n    boxDrop_destroy:function(box){\r\n\r\n        let list = this.rankList[box.boxItem.rank];\r\n        \r\n        list.removeByValue(list,box.node);\r\n\r\n        this.boxPool.put(box.node);\r\n    },\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}