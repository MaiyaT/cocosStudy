{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BoxDrop",
    "require",
    "BoxItem",
    "BoxState",
    "Game_State",
    "BoxType",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "box_prefab",
    "default",
    "type",
    "Prefab",
    "num_rank",
    "tooltip",
    "num_row",
    "super_node",
    "Node",
    "_gameState",
    "Start",
    "gamestate",
    "get",
    "set",
    "value",
    "tempBefore",
    "Play",
    "updateAllBeginOriginY",
    "Filling",
    "fillInterval",
    "createBarrierCanvas",
    "onLoad",
    "Array",
    "prototype",
    "removeByValue",
    "arr",
    "val",
    "i",
    "length",
    "splice",
    "rankList",
    "itemWidth",
    "itemHeight",
    "itemSpace",
    "margin_top",
    "height",
    "margin_bottom",
    "margin_left",
    "margin_right",
    "boxPool",
    "NodePool",
    "listBarrier",
    "replayGame",
    "children",
    "boxDrop_destroy",
    "getComponent",
    "item",
    "shift",
    "console",
    "log",
    "index",
    "createRankContent",
    "checkPanelEliminatable",
    "barrierList",
    "forEach",
    "ele",
    "list",
    "rank",
    "box",
    "row",
    "undefined",
    "box_c",
    "push",
    "boxSpeciallyShow",
    "Barrier",
    "bind",
    "num_b",
    "boxItem",
    "color_type",
    "TypeCount",
    "Blank",
    "beginBlankFill",
    "blankCheckReplaceBlankAvailable",
    "box_left",
    "box_Right",
    "box_bottom",
    "blankRemoveItemAtRank",
    "blankReplaceBox",
    "blankCheckReplaceNormalAvailable",
    "box_bottom_left",
    "box_bottom_Right",
    "box_bottom_zheng",
    "boxBlank",
    "boxReplace",
    "box_re",
    "box_bl",
    "repeatList",
    "ani_point",
    "filter",
    "elem",
    "x",
    "begin_x",
    "isleft",
    "end_y",
    "node",
    "put",
    "boxRemove",
    "new_box",
    "updateRankEndYIndex",
    "y",
    "begin_y",
    "last_box",
    "space_top",
    "state_b",
    "EFalling",
    "EFalled",
    "rank_list",
    "origin_x",
    "boxDrop_get",
    "active",
    "width",
    "ENormal",
    "initBoxItem",
    "count",
    "random0To1",
    "resetOriginPos",
    "parent",
    "updateAllRankEndY",
    "createBox",
    "list_sub",
    "end_box_y",
    "item_box",
    "off_top",
    "j",
    "exchangeBoxItem",
    "box1",
    "box2",
    "toCheckViable",
    "boxItem1",
    "boxItem2",
    "temp_endy",
    "runAction",
    "moveTo",
    "p",
    "temp_row",
    "temp_node",
    "list1",
    "list2",
    "temp_beginx",
    "temp_rank",
    "row_index",
    "isViable",
    "setTimeout",
    "wipe_list",
    "tempList",
    "pre_box",
    "item_pre",
    "toAdd",
    "apply",
    "isRepeatItemInWipe",
    "id",
    "showDelayAnimation",
    "schedule",
    "EDestroy",
    "size",
    "instantiate",
    "init",
    "update",
    "dt",
    "self",
    "box_c_i"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "\r\n\r\nvar BoxDrop = require(\"BoxDrop\");\r\nvar BoxItem = require(\"BoxItem\");\r\nvar BoxState = require(\"States\").BoxState;\r\nvar Game_State = require(\"States\").Game_State;\r\nvar BoxType = require(\"States\").BoxType;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        box_prefab:{\r\n            default:null,\r\n            type:cc.Prefab,\r\n        },\r\n\r\n        num_rank:{\r\n            default:10,\r\n            tooltip:\"列数\"\r\n        },\r\n\r\n        num_row:{\r\n            default:10,\r\n            tooltip:\"行数\"\r\n        },\r\n\r\n        super_node:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n\r\n        _gameState:{\r\n            default:Game_State.Start,\r\n            type:Game_State,\r\n        },\r\n\r\n        gamestate:{\r\n            get:function () {\r\n                return this._gameState;\r\n            },\r\n            set:function (value) {\r\n\r\n                if(this._gameState !== value){\r\n\r\n                    let tempBefore = this._gameState;\r\n\r\n                    this._gameState = value;\r\n\r\n                    if(value === Game_State.Play){\r\n                        //开始掉落\r\n                        this.updateAllBeginOriginY();\r\n                    }else  if(value === Game_State.Filling){\r\n                        this.fillInterval = 0;\r\n                    }\r\n\r\n\r\n                    if(tempBefore === Game_State.Start){\r\n                        //是刚实例游戏完之后\r\n                        //创建障碍物\r\n                        this.createBarrierCanvas();\r\n                    }\r\n\r\n                }\r\n            },\r\n            type:Game_State\r\n        },\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n        Array.prototype.removeByValue = function(arr,val){\r\n\r\n            for (var i = 0; i<arr.length; i++){\r\n                if(arr[i] === val){\r\n                    arr.splice(i,1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // Array.prototype.filterRepeat = function(){  \r\n        //     //直接定义结果数组  \r\n        //     var arr = [];\r\n        //     if(arr.length > 0){\r\n        //         arr.push(this[0]);\r\n        //     }\r\n\r\n        //     for(var i = 1; i < this.length; i++){    //从数组第二项开始循环遍历此数组  \r\n        //         //对元素进行判断：  \r\n        //         //如果数组当前元素在此数组中第一次出现的位置不是i  \r\n        //         //那么我们可以判断第i项元素是重复的，否则直接存入结果数组  \r\n        //         if(this.indexOf(this[i]) == i){  \r\n        //             arr.push(this[i]);  \r\n        //         }  \r\n        //     }  \r\n        //     return arr;  \r\n        // }  \r\n\r\n        this.rankList = [];\r\n\r\n        this.itemWidth = 100;\r\n        this.itemHeight = 100;\r\n\r\n        this.itemSpace = 5;\r\n\r\n        //this.margin_top = -(cc.director.getWinSize().height)*0.5 + this.itemHeight*this.num_row + this.itemSpace * (this.num_row - 1) + this.itemHeight*0.5;\r\n        //this.margin_bottom = -(cc.director.getWinSize().height)*0.5 - this.itemHeight*0.5;\r\n\r\n        this.margin_top = -(this.super_node.height)*0.5 + this.itemHeight*this.num_row + this.itemSpace * (this.num_row - 1) + this.itemHeight*0.5;\r\n        this.margin_bottom = -(this.super_node.height)*0.5 +  this.itemHeight*0.5;\r\n\r\n        this.margin_left =  -this.itemWidth*this.num_rank*0.5 + this.itemSpace*(this.num_rank*0.5-1);\r\n        this.margin_right = this.itemWidth * this.num_rank * 0.5 - this.itemSpace * (this.num_rank * 0.5 - 1);\r\n\r\n        //console.log(\"asds  \" + this.margin_top+\"  \"+this.margin_bottom);\r\n\r\n        this.boxPool = new cc.NodePool(\"BoxDrop\");\r\n\r\n        /*障碍物的方块列表*/\r\n        this.listBarrier = [];\r\n\r\n        this.replayGame();\r\n    },\r\n\r\n    //重新开始游戏\r\n    replayGame:function(){\r\n\r\n        this.gamestate = Game_State.Start;\r\n\r\n        var children = this.super_node.children;\r\n\r\n        while(children.length > 0){\r\n            \r\n            for (var i = 0; i < children.length; ++i) {\r\n                this.boxDrop_destroy(children[i].getComponent(\"BoxDrop\"));\r\n            }            \r\n        }\r\n\r\n        //清空ranklist\r\n        var item;\r\n        while (item = this.rankList.shift()) {\r\n            \r\n        }\r\n\r\n        console.log(\"清空成==========功======\");\r\n\r\n        //创建所有面板的数据\r\n        for(let index = 0; index<this.num_rank; index++){\r\n            this.createRankContent(index);\r\n        }\r\n\r\n        this.updateAllBeginOriginY();\r\n\r\n        this.checkPanelEliminatable();\r\n    },\r\n\r\n    /*创建障碍物 布局\r\n    * 1.在障碍物下面的物体把他清空\r\n    * 2.这个列的数量没有变还是这些数量\r\n    * */\r\n    createBarrierCanvas:function () {\r\n\r\n        // for (let i = 3; i<this.num_rank-3; i++){\r\n        //     let list = this.rankList[i];\r\n        //\r\n        //     let box = list[7];\r\n        //     let box_c = box.getComponent(\"BoxDrop\");\r\n        //     box_c.boxSpeciallyShow(BoxType.Barrier);\r\n        // }\r\n\r\n        let barrierList = [{\"row\":7,\"rank\":5},{\"row\":7,\"rank\":6},{\"row\":7,\"rank\":7},{\"row\":7,\"rank\":8},{\"row\":6,\"rank\":5}];\r\n\r\n        //设置是 barrier的方块类型\r\n        barrierList.forEach(function(ele){\r\n\r\n            let list = this.rankList[ele.rank];\r\n            let box = list[ele.row];\r\n            if(box !== undefined){\r\n                let box_c = box.getComponent(\"BoxDrop\");\r\n                this.listBarrier.push(box);\r\n                box_c.boxSpeciallyShow(BoxType.Barrier);\r\n            }\r\n\r\n        }.bind(this));\r\n\r\n        /*设置这个barrier下的方块*/\r\n        barrierList.forEach(function(ele){\r\n\r\n            let list = this.rankList[ele.rank];\r\n            for(let num_b = 0; num_b<ele.row;num_b++){\r\n\r\n                //这个位置设置成空白占位信息\r\n                let box = list[num_b];\r\n                if(box !== undefined) {\r\n                    let box_c = box.getComponent(\"BoxDrop\");\r\n                    if(box_c.boxItem.color_type < BoxType.TypeCount){\r\n                        box_c.boxSpeciallyShow(BoxType.Blank);\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n\r\n        this.beginBlankFill();\r\n    },\r\n\r\n\r\n    /*开始空位填充*/\r\n    beginBlankFill:function () {\r\n\r\n        /*看是否需要创建 方块 去填充占位方块*/\r\n\r\n        if(this.listBarrier.length === 0){\r\n            //没有障碍物\r\n            return;\r\n        }\r\n\r\n        //给这个障碍物下面补充方块\r\n        for (let i = 0; i < this.listBarrier.length; i++){\r\n\r\n            let box = this.listBarrier[i];\r\n\r\n            this.blankCheckReplaceBlankAvailable(box);\r\n        }\r\n    },\r\n\r\n\r\n    /*检测是否可以替换\r\n    * box_c 这个要操作的方块类型  是 障碍物\r\n    * */\r\n    blankCheckReplaceBlankAvailable : function (box) {\r\n\r\n        let box_c = box.getComponent(\"BoxDrop\");\r\n\r\n        if(box_c.boxItem.color_type === BoxType.Barrier){\r\n            //是障碍物\r\n\r\n            //这个障碍物的边界两边 物体是 边界 、障碍物、方块\r\n            let box_left = this.rankList[box_c.boxItem.rank-1][box_c.boxItem.row];\r\n            let box_Right = this.rankList[box_c.boxItem.rank+1][box_c.boxItem.row];\r\n            let box_bottom = this.rankList[box_c.boxItem.rank][box_c.boxItem.row-1];\r\n\r\n            if(box_bottom.getComponent(\"BoxDrop\").boxItem.color_type === BoxType.Blank){\r\n                //这个底部是空的 可以填充方块\r\n\r\n                if(box_left.getComponent(\"BoxDrop\").boxItem.color_type < BoxType.TypeCount){\r\n                    //左边位置掉落填充\r\n                    console.log(\"左边位置掉落填充\");\r\n\r\n                    //移除 左边这个要删除的 更新新的方块的开始位置信息\r\n                    this.blankRemoveItemAtRank(box_left);\r\n\r\n                    //设置要替换的位置\r\n                    this.blankReplaceBox(box_bottom,box_left);\r\n\r\n                    this.blankCheckReplaceBlankAvailable(box);\r\n\r\n                }else if(box_Right.getComponent(\"BoxDrop\").boxItem.color_type < BoxType.TypeCount){\r\n                    //右边位置掉落填充\r\n                    console.log(\"右边位置掉落填充\");\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*检测是否可以替换\r\n     * box_c 这个要操作的方块类型  是 方块\r\n     * */\r\n    blankCheckReplaceNormalAvailable : function (box){\r\n\r\n        let box_c = box.getComponent(\"BoxDrop\");\r\n        if(box_c.boxItem.color_type < BoxType.TypeCount){\r\n            //是方块\r\n\r\n            //这个方块的 左下方 右下方 正下方 判断是否是空位\r\n            let box_bottom_left = this.rankList[box_c.boxItem.rank-1][box_c.boxItem.row-1];\r\n            let box_bottom_Right = this.rankList[box_c.boxItem.rank+1][box_c.boxItem.row-1];\r\n            let box_bottom_zheng = this.rankList[box_c.boxItem.rank][box_c.boxItem.row-1];\r\n            if(box_bottom_zheng !== undefined &&\r\n                box_bottom_zheng.getComponent(\"BoxDrop\").boxItem.color_type === BoxType.Blank) {\r\n                //正下方是空的 往正下方 替换\r\n                console.log(\"正下方是空的 往正下方 替换\");\r\n                this.blankReplaceBox(box_bottom_zheng,box);\r\n                return false;\r\n            }else if(box_bottom_left !== undefined &&\r\n                box_bottom_left.getComponent(\"BoxDrop\").boxItem.color_type === BoxType.Blank){\r\n                //左下方是空的 往左下方 替换\r\n                console.log(\"左下方\");\r\n                this.blankReplaceBox(box_bottom_left,box);\r\n                return false;\r\n            }else if(box_bottom_Right !== undefined &&\r\n                box_bottom_Right.getComponent(\"BoxDrop\").boxItem.color_type === BoxType.Blank){\r\n                //右下方是空的 往右下方 替换\r\n                console.log(\"右下方\");\r\n                this.blankReplaceBox(box_bottom_Right,box);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n\r\n    /*替换方块 并执行替换切换的动画效果*/\r\n    blankReplaceBox :function (boxBlank,boxReplace){\r\n\r\n        let box_re = boxReplace.getComponent(\"BoxDrop\");\r\n        let box_bl = boxBlank.getComponent(\"BoxDrop\");\r\n\r\n\r\n        //设置x的位置变化的时候 点\r\n        let repeatList = box_re.boxItem.ani_point.filter(function(elem){\r\n            return elem.x === box_bl.boxItem.begin_x;\r\n        });\r\n        \r\n        if(repeatList.length === 0) {\r\n            let isleft = box_bl.boxItem.begin_x < box_re.boxItem.begin_x;\r\n            box_re.boxItem.ani_point.push({\"x\": box_bl.boxItem.begin_x, \"y\": box_bl.boxItem.end_y + box_bl.node.height,\"isleft\":isleft});\r\n        }\r\n\r\n\r\n        box_re.boxItem.end_y = box_bl.boxItem.end_y;\r\n\r\n        // let temp_rank = box_re.boxItem.rank;\r\n\r\n        box_re.boxItem.row = box_bl.boxItem.row;\r\n        box_re.boxItem.rank = box_bl.boxItem.rank;\r\n\r\n        //这个方块继续往下替换\r\n        if(this.blankCheckReplaceNormalAvailable(box_re)){\r\n            console.log(\"移动完成 替换=======\");\r\n\r\n            //占位的方块 位置替换成要移入的方块  移除这个占位方块\r\n            this.rankList[box_bl.boxItem.rank][box_bl.boxItem.row] = boxReplace;\r\n\r\n            this.boxPool.put(box_bl.node);\r\n        }\r\n\r\n\r\n        //后面遍历的时候把他移除掉\r\n        //this.rankList[temp_rank].removeByValue(this.rankList[temp_rank],boxReplace);\r\n\r\n\r\n        // boxDrop_destroy:function(box){\r\n        //\r\n        //     let list = this.rankList[box.boxItem.rank];\r\n        //\r\n        //     list.removeByValue(list,box.node);\r\n        //\r\n        //     this.boxPool.put(box.node);\r\n        // },\r\n\r\n    },\r\n\r\n    \r\n    blankRemoveItemAtRank:function (boxRemove) {\r\n\r\n        let box_re = boxRemove.getComponent(\"BoxDrop\");\r\n        let list = this.rankList[box_re.boxItem.rank];\r\n        list.removeByValue(list,boxRemove);\r\n\r\n        let new_box = this.updateRankEndYIndex(box_re.boxItem.rank);\r\n\r\n        if(new_box !== null){\r\n\r\n            let box_c = new_box.getComponent(\"BoxDrop\");\r\n            if(box_c.node.y !== box_c.boxItem.end_y){\r\n\r\n                if((this.gamestate === Game_State.Start) || (box_c.node.y >= box_c.boxItem.begin_y)){\r\n\r\n                    //他本身是最后一个 跟倒数第二个对比\r\n                    let last_box = list[list.length-2];\r\n                    if(last_box !== undefined){\r\n                        box_c.boxItem.begin_y = last_box.getComponent(\"BoxDrop\").boxItem.begin_y + box_c.node.height + 10*list.length;\r\n                    }\r\n                    else {\r\n                        box_c.boxItem.begin_y = this.margin_top + space_top;\r\n                        box_c.node.y = box_c.boxItem.begin_y;\r\n                    }\r\n                    box_c.node.y = box_c.boxItem.begin_y;\r\n                }\r\n\r\n                //是要掉落的\r\n                if(this.gamestate === Game_State.Play ||\r\n                    this.gamestate === Game_State.Filling ||\r\n                    this.gamestate === Game_State.Start){\r\n                    box_c.state_b = BoxState.EFalling;\r\n                }\r\n            }else{\r\n                box_c.state_b = BoxState.EFalled;\r\n            }\r\n\r\n        }\r\n    },\r\n    \r\n\r\n\r\n    //创建每一列的数据\r\n    createRankContent:function(index){\r\n\r\n        let rank_list = [];\r\n\r\n        let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*index;\r\n         \r\n        for(let i = 0; i < this.num_row; i++){\r\n\r\n            let box = this.boxDrop_get();\r\n            box.active = true;\r\n\r\n            box.width = this.itemWidth;\r\n            box.height = this.itemHeight;\r\n\r\n            let box_c = box.getComponent(\"BoxDrop\");\r\n            box_c.state_b = BoxState.ENormal;\r\n\r\n            box_c.initBoxItem();\r\n\r\n            box_c.boxItem.begin_x = origin_x;\r\n            box_c.boxItem.begin_y = this.margin_top;\r\n            box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n            box_c.boxItem.rank = index;\r\n            box_c.boxItem.row = i;\r\n\r\n            let count = BoxType.TypeCount;\r\n            box_c.boxItem.color_type = (cc.random0To1()*count) | 0;\r\n\r\n            box_c.resetOriginPos();\r\n\r\n            box.parent = this.super_node;\r\n\r\n            rank_list.push(box);\r\n        }\r\n\r\n        this.rankList.push(rank_list);\r\n\r\n\r\n    },\r\n\r\n    //更新所有列 end y的数据\r\n    updateAllRankEndY:function(){\r\n\r\n        //看该列的数量是否 小于 this.num_row  少于的话则补充\r\n        for(let i = 0; i<this.num_rank; i++){\r\n\r\n            this.updateRankEndYIndex(i);\r\n        }\r\n\r\n        this.updateAllBeginOriginY();\r\n\r\n        if(this.gamestate === Game_State.Start){\r\n            this.checkPanelEliminatable();\r\n        }\r\n    },\r\n\r\n    /*更新某列的数据*/\r\n    updateRankEndYIndex:function(index){\r\n\r\n        let createBox = null;\r\n\r\n        let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*index;\r\n\r\n        let list_sub = this.rankList[index];\r\n\r\n        while(list_sub.length < this.num_row){\r\n\r\n            let new_box = this.boxDrop_get();\r\n            new_box.active = true;\r\n            new_box.width = this.itemWidth;\r\n            new_box.height = this.itemHeight;\r\n\r\n            let box_c = new_box.getComponent(\"BoxDrop\");\r\n            box_c.state_b = BoxState.ENormal;\r\n\r\n            box_c.initBoxItem();\r\n\r\n            box_c.boxItem.begin_x = origin_x;\r\n            box_c.boxItem.begin_y = this.margin_top;\r\n            box_c.boxItem.rank = index;\r\n            box_c.boxItem.row = 0;\r\n            box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n            box_c.resetOriginPos();\r\n\r\n            new_box.parent = this.super_node;\r\n\r\n            list_sub.push(new_box);\r\n\r\n\r\n            createBox = new_box;\r\n        }\r\n\r\n\r\n        let end_box_y = this.margin_bottom;\r\n\r\n        //更新每个元素的end y 位置\r\n        for (let i = 0; i<list_sub.length; i++){\r\n\r\n            let item_box = list_sub[i];\r\n            let box_c = item_box.getComponent(\"BoxDrop\");\r\n            box_c.boxItem.row = i;\r\n            box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*i;\r\n        }\r\n\r\n\r\n        return createBox;\r\n    },\r\n\r\n\r\n    /**\r\n     * 更新每一列他们中的每个元素的初始的origin y的值\r\n     */\r\n    updateAllBeginOriginY:function () {\r\n\r\n\r\n        /**\r\n         * 某一列中 从最后开始遍历返回\r\n         * 算出开始掉了的位置\r\n         */\r\n        for (let i = 0; i<this.num_rank; i++){\r\n            let list = this.rankList[i];\r\n\r\n            //判断是否 已达到他的endy 如果还未达到就是 正要掉落\r\n            let off_top = 0;\r\n            let space_top = 5;\r\n\r\n            for(let j = 0; j<this.num_row; j++){\r\n                let box = list[j];\r\n\r\n                let box_c = box.getComponent(\"BoxDrop\");\r\n                //box_c.boxItem.begin_y = this.margin_top;\r\n\r\n                if(box_c.node.y !== box_c.boxItem.end_y){\r\n\r\n                    /**\r\n                     * 1.实例游戏的时候 初始开始的位置\r\n                     * 2.消除的 方块不在界面中的设置他的开始位置 已在界面中的不去设置他\r\n                     */\r\n                    if((this.gamestate === Game_State.Start) || (box_c.node.y >= box_c.boxItem.begin_y)){\r\n\r\n                        box_c.boxItem.begin_y = this.margin_top + off_top;\r\n\r\n                        box_c.node.y = box_c.boxItem.begin_y;\r\n\r\n                        off_top = off_top + box_c.node.height + space_top;\r\n\r\n                        space_top = space_top + 10;\r\n                    }\r\n\r\n                    //是要掉落的\r\n                    if(this.gamestate === Game_State.Play ||\r\n                        this.gamestate === Game_State.Filling ||\r\n                        this.gamestate === Game_State.Start){\r\n                        box_c.state_b = BoxState.EFalling;\r\n                    }\r\n                }else{\r\n                    box_c.state_b = BoxState.EFalled;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    //交换两个方块的位置\r\n    exchangeBoxItem:function(box1,box2,toCheckViable = true){\r\n\r\n        let boxItem1 = box1.getComponent(\"BoxDrop\").boxItem;\r\n        let boxItem2 = box2.getComponent(\"BoxDrop\").boxItem;\r\n\r\n        if(boxItem1.rank === boxItem2.rank){\r\n            //同一列的\r\n            let list = this.rankList[boxItem1.rank];\r\n\r\n            //交换位置\r\n            let temp_endy = boxItem2.end_y;\r\n            boxItem2.end_y = boxItem1.end_y;\r\n            boxItem1.end_y = temp_endy;\r\n\r\n            box1.node.runAction(cc.moveTo(0.2,cc.p(boxItem1.begin_x,boxItem1.end_y)));\r\n            box2.node.runAction(cc.moveTo(0.2,cc.p(boxItem2.begin_x,boxItem2.end_y)));\r\n            // box1.node.y = boxItem1.end_y;\r\n            // box2.node.y = boxItem2.end_y;\r\n\r\n            //交换信息\r\n            let temp_row = boxItem2.row;\r\n\r\n            boxItem2.row = boxItem1.row;\r\n            boxItem1.row = temp_row;            \r\n\r\n            let temp_node = list[boxItem1.row];\r\n            list[boxItem1.row] = list[boxItem2.row];\r\n            list[boxItem2.row] = temp_node;\r\n\r\n\r\n\r\n        }else if(boxItem1.row === boxItem2.row){\r\n            //同一行的\r\n            let list1 = this.rankList[boxItem1.rank];\r\n            let list2 = this.rankList[boxItem2.rank];\r\n\r\n            //交换位置\r\n            let temp_beginx = boxItem2.begin_x;\r\n            boxItem2.begin_x = boxItem1.begin_x;\r\n            boxItem1.begin_x = temp_beginx;\r\n\r\n            box1.node.runAction(cc.moveTo(0.2,cc.p(boxItem1.begin_x,boxItem1.end_y)));\r\n            box2.node.runAction(cc.moveTo(0.2,cc.p(boxItem2.begin_x,boxItem2.end_y)));\r\n            // box1.node.y = boxItem1.end_y;\r\n            // box2.node.y = boxItem2.end_y;\r\n\r\n            //交换信息\r\n            let temp_rank = boxItem2.rank;\r\n            boxItem2.rank = boxItem1.rank;\r\n            boxItem1.rank = temp_rank;\r\n\r\n            let row_index = boxItem1.row;\r\n            let temp_node = list1[row_index];\r\n            list1[row_index] = list2[row_index];\r\n            list2[row_index] = temp_node;\r\n        }\r\n\r\n        \r\n        if(toCheckViable){\r\n\r\n            let isViable = this.checkPanelEliminatable();\r\n\r\n            if(!isViable){\r\n\r\n                //不可消除的话 位置再互换回来\r\n                console.log(\"不可消除\");\r\n                setTimeout(function() {\r\n                this.exchangeBoxItem(box2,box1,false);\r\n                }.bind(this), 300);\r\n            }\r\n        }\r\n    },\r\n\r\n    //检测面板所有方块 是否可消除\r\n    checkPanelEliminatable:function(){\r\n\r\n        let wipe_list = [];\r\n\r\n        //判断列 是否有三个以及三个以上的一样的色块连在一起\r\n        for (let i = 0; i<this.num_rank; i++){\r\n            let list = this.rankList[i];\r\n            let tempList = [];\r\n            let pre_box = null;\r\n            for(let j = 0; j<this.num_row; j++){\r\n                let box = list[j];\r\n                if(!pre_box){\r\n                    pre_box = box;\r\n                    tempList.push(box);\r\n                }else{\r\n                    let item_pre = pre_box.getComponent(\"BoxDrop\").boxItem;\r\n                    let item_box = box.getComponent(\"BoxDrop\").boxItem;\r\n\r\n                    let toAdd = false;\r\n                    /*颜色相同 并且是普通类型的颜色的时候*/\r\n                    if(item_pre.color_type === item_box.color_type &&\r\n                        item_pre.color_type < BoxType.TypeCount){\r\n                        tempList.push(box);\r\n                        if(j === (this.num_row-1)){\r\n                            toAdd = true;\r\n                        }\r\n                    }else{\r\n                        toAdd = true;\r\n                    }\r\n\r\n                    if(toAdd){\r\n                        if(tempList.length >= 3){\r\n                            //追加到wipe里面\r\n                            Array.prototype.push.apply(wipe_list,tempList);\r\n\r\n                        }\r\n                        //清空数组\r\n                        tempList = [];\r\n\r\n                        pre_box = box;\r\n                        tempList.push(box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        function isRepeatItemInWipe(item){\r\n            for(let i = 0; i<wipe_list.length; i++){\r\n                if(wipe_list[i].getComponent(\"BoxDrop\").boxItem.id === item.getComponent(\"BoxDrop\").boxItem.id){\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        //判断行 是否有三个以及三个以上的一样的色块连在一起\r\n        for (let i = 0; i<this.num_row; i++){\r\n            \r\n            let tempList = [];\r\n            let pre_box = null;\r\n            for(let j = 0; j<this.num_rank; j++){\r\n                let box = this.rankList[j][i];\r\n                if(!pre_box){\r\n                    pre_box = box;\r\n                    tempList.push(box);\r\n                }else{\r\n                    let item_pre = pre_box.getComponent(\"BoxDrop\").boxItem;\r\n                    let item_box = box.getComponent(\"BoxDrop\").boxItem;\r\n\r\n                    let toAdd = false;\r\n                    if(item_pre.color_type === item_box.color_type &&\r\n                        item_pre.color_type < BoxType.TypeCount){\r\n                        tempList.push(box);\r\n                        if(j === (this.num_rank-1)){\r\n                            toAdd = true;\r\n                        }\r\n                    }else{\r\n                        toAdd = true;\r\n                    }\r\n\r\n                    if(toAdd){\r\n                        if(tempList.length >= 3){\r\n                            //追加到wipe里面\r\n                            tempList.forEach(function(elem){\r\n\r\n                                if(!isRepeatItemInWipe(elem)){\r\n                                    wipe_list.push(elem);\r\n                                }\r\n\r\n\r\n                            });\r\n\r\n                        }\r\n                        //清空数组\r\n                        tempList = [];\r\n\r\n                        pre_box = box;\r\n                        tempList.push(box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if(wipe_list.length > 0){\r\n\r\n            let showDelayAnimation = true;\r\n            if(this.gamestate === Game_State.Start){\r\n                //不显示消除动画\r\n                showDelayAnimation = false;\r\n            }\r\n\r\n\r\n            //不是初始化的 停留一会儿再消除 让用户看到要消除了什么东西\r\n            this.schedule(function () {\r\n\r\n                //消除掉\r\n                // wipe_list.forEach(function(elem){\r\n                //\r\n                //     // let box = elem.getComponent(\"BoxDrop\");\r\n                //     // box.state_b = BoxState.EDestroy;\r\n                //     this.boxDrop_destroy(elem.getComponent(\"BoxDrop\"));\r\n                //\r\n                // }.bind(this));\r\n\r\n                wipe_list.forEach(function(elem){\r\n\r\n                    let box = elem.getComponent(\"BoxDrop\");\r\n                    box.state_b = BoxState.EDestroy;\r\n\r\n                }.bind(this));\r\n\r\n                /**\r\n                 * 这边一个延迟\r\n                 如果游戏是 初始化的话不延迟\r\n                 不是初始化 start的 要等销毁动画完成之后再开始掉落\r\n                 */\r\n                this.schedule(function () {\r\n\r\n                    //有销毁在掉落\r\n                    if(this.gamestate !== Game_State.Start){\r\n                        //正在掉落填充\r\n                        this.gamestate = Game_State.Filling;\r\n                    }\r\n\r\n                    this.updateAllRankEndY();\r\n\r\n                }.bind(this),(this.gamestate !== Game_State.Start)?0.3:0,false);\r\n\r\n\r\n            }.bind(this),showDelayAnimation?0.3:0,false);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.gamestate = Game_State.Play;\r\n\r\n        return false;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    boxDrop_get:function(){\r\n\r\n        let box = null;\r\n        if(this.boxPool.size() > 0){\r\n            box = this.boxPool.get();\r\n        }else{\r\n            box = cc.instantiate(this.box_prefab);\r\n            box.getComponent(\"BoxDrop\").init();\r\n        }\r\n\r\n        return box;\r\n    },\r\n\r\n    boxDrop_destroy:function(box){\r\n\r\n        let list = this.rankList[box.boxItem.rank];\r\n        \r\n        list.removeByValue(list,box.node);\r\n\r\n        this.boxPool.put(box.node);\r\n    },\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n\r\n        if(this.gamestate === Game_State.Filling ||\r\n            this.gamestate === Game_State.Start){\r\n\r\n            let self = this;\r\n\r\n            if(this.fillInterval === 10){\r\n\r\n                this.fillInterval = 0;\r\n\r\n                console.log(\"======定时开始判断是否都已掉落到底部了 begin =====\");\r\n\r\n                for (let i = 0; i<self.num_rank; i++) {\r\n                    let list = self.rankList[i];\r\n\r\n                    for (let j = 0; j < self.num_row; j++) {\r\n                        let box = list[j];\r\n                        let box_c_i = box.getComponent(\"BoxDrop\");\r\n                        if(box_c_i.state_b !== BoxState.EFalled){\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                console.log(\"=========都到 掉落到底部了 检测是否可消除 end =========\");\r\n\r\n                this.gamestate = Game_State.Play;\r\n                self.checkPanelEliminatable();\r\n            }\r\n\r\n            this.fillInterval += 1;\r\n        }\r\n\r\n    },\r\n});\r\n\r\n\r\n"
  ]
}