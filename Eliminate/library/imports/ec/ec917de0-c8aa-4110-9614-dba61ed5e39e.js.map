{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BoxDrop",
    "require",
    "BoxItem",
    "BoxState",
    "Game_State",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "box_prefab",
    "default",
    "type",
    "Prefab",
    "num_rank",
    "tooltip",
    "num_row",
    "super_node",
    "Node",
    "_gameState",
    "Start",
    "gamestate",
    "get",
    "set",
    "value",
    "Play",
    "updateBeginOriginY",
    "Filling",
    "fillInterval",
    "onLoad",
    "Array",
    "prototype",
    "removeByValue",
    "arr",
    "val",
    "i",
    "length",
    "splice",
    "rankList",
    "itemWidth",
    "itemHeight",
    "itemSpace",
    "margin_top",
    "height",
    "margin_bottom",
    "margin_left",
    "margin_right",
    "boxPool",
    "NodePool",
    "replayGame",
    "children",
    "boxDrop_destroy",
    "getComponent",
    "item",
    "shift",
    "console",
    "log",
    "index",
    "createRankContent",
    "checkPanelEliminatable",
    "rank_list",
    "origin_x",
    "box",
    "boxDrop_get",
    "active",
    "width",
    "box_c",
    "state_b",
    "ENormal",
    "initBoxItem",
    "boxItem",
    "begin_x",
    "begin_y",
    "end_y",
    "rank",
    "row",
    "color_type",
    "random0To1",
    "resetOriginPos",
    "parent",
    "push",
    "updateAllRankEndY",
    "list_sub",
    "new_box",
    "item_box",
    "list",
    "off_top",
    "space_top",
    "j",
    "node",
    "y",
    "EFalling",
    "exchangeBoxItem",
    "box1",
    "box2",
    "toCheckViable",
    "boxItem1",
    "boxItem2",
    "temp_endy",
    "runAction",
    "moveTo",
    "p",
    "temp_row",
    "temp_node",
    "list1",
    "list2",
    "temp_beginx",
    "temp_rank",
    "row_index",
    "isViable",
    "setTimeout",
    "bind",
    "wipe_list",
    "tempList",
    "pre_box",
    "item_pre",
    "toAdd",
    "apply",
    "isRepeatItemInWipe",
    "id",
    "forEach",
    "elem",
    "showDelayAnimation",
    "schedule",
    "size",
    "instantiate",
    "init",
    "put",
    "update",
    "dt",
    "self",
    "box_c_i",
    "EFalled"
  ],
  "mappings": ";;AAEA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,UAAUD,QAAQ,SAAR,CAAd;AACA,IAAIE,WAAWF,QAAQ,QAAR,EAAkBE,QAAjC;AACA,IAAIC,aAAaH,QAAQ,QAAR,EAAkBG,UAAnC;;AAGAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAERC,oBAAW;AACPC,qBAAQ,IADD;AAEPC,kBAAKP,GAAGQ;AAFD,SAFH;;AAORC,kBAAS;AACLH,qBAAQ,EADH;AAELI,qBAAQ;AAFH,SAPD;;AAYRC,iBAAQ;AACJL,qBAAQ,EADJ;AAEJI,qBAAQ;AAFJ,SAZA;;AAiBRE,oBAAW;AACPN,qBAAQ,IADD;AAEPC,kBAAKP,GAAGa;AAFD,SAjBH;;AAsBRC,oBAAW;AACPR,qBAAQP,WAAWgB,KADZ;AAEPR,kBAAKR;AAFE,SAtBH;;AA2BRiB,mBAAU;AACNC,iBAAI,eAAY;AACZ,uBAAO,KAAKH,UAAZ;AACH,aAHK;AAINI,iBAAI,aAAUC,KAAV,EAAiB;;AAEjB,oBAAG,KAAKL,UAAL,KAAoBK,KAAvB,EAA6B;AACzB,yBAAKL,UAAL,GAAkBK,KAAlB;AACA,wBAAGA,UAAUpB,WAAWqB,IAAxB,EAA6B;AACzB;AACA,6BAAKC,kBAAL;AACH,qBAHD,MAGO,IAAGF,UAAUpB,WAAWuB,OAAxB,EAAgC;AACnC,6BAAKC,YAAL,GAAoB,CAApB;AACH;AAEJ;AACJ,aAhBK;AAiBNhB,kBAAKR;AAjBC;;AA3BF,KAHP;;AAoDL;AACAyB,YAAQ,kBAAY;;AAEhBC,cAAMC,SAAN,CAAgBC,aAAhB,GAAgC,UAASC,GAAT,EAAaC,GAAb,EAAiB;;AAE7C,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAEF,IAAIG,MAAtB,EAA8BD,GAA9B,EAAkC;AAC9B,oBAAGF,IAAIE,CAAJ,MAAWD,GAAd,EAAkB;AACdD,wBAAII,MAAJ,CAAWF,CAAX,EAAa,CAAb;AACA;AACH;AACJ;AACJ,SARD;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAKG,QAAL,GAAgB,EAAhB;;AAEA,aAAKC,SAAL,GAAiB,GAAjB;AACA,aAAKC,UAAL,GAAkB,GAAlB;;AAEA,aAAKC,SAAL,GAAiB,CAAjB;;AAEA;AACA;;AAEA,aAAKC,UAAL,GAAkB,CAAE,KAAKzB,UAAL,CAAgB0B,MAAlB,GAA0B,GAA1B,GAAgC,KAAKH,UAAL,GAAgB,KAAKxB,OAArD,GAA+D,KAAKyB,SAAL,IAAkB,KAAKzB,OAAL,GAAe,CAAjC,CAA/D,GAAqG,KAAKwB,UAAL,GAAgB,GAAvI;AACA,aAAKI,aAAL,GAAqB,CAAE,KAAK3B,UAAL,CAAgB0B,MAAlB,GAA0B,GAA1B,GAAgC,KAAKH,UAAL,GAAgB,GAArE;;AAEA,aAAKK,WAAL,GAAoB,CAAC,KAAKN,SAAN,GAAgB,KAAKzB,QAArB,GAA8B,GAA9B,GAAoC,KAAK2B,SAAL,IAAgB,KAAK3B,QAAL,GAAc,GAAd,GAAkB,CAAlC,CAAxD;AACA,aAAKgC,YAAL,GAAoB,KAAKP,SAAL,GAAiB,KAAKzB,QAAtB,GAAiC,GAAjC,GAAuC,KAAK2B,SAAL,IAAkB,KAAK3B,QAAL,GAAgB,GAAhB,GAAsB,CAAxC,CAA3D;;AAEA;;AAEA,aAAKiC,OAAL,GAAe,IAAI1C,GAAG2C,QAAP,CAAgB,SAAhB,CAAf;;AAEA,aAAKC,UAAL;AACH,KAxGI;;AA0GL;AACAA,gBAAW,sBAAU;;AAEjB,aAAK5B,SAAL,GAAiBjB,WAAWgB,KAA5B;;AAEA,YAAI8B,WAAW,KAAKjC,UAAL,CAAgBiC,QAA/B;;AAEA,eAAMA,SAASd,MAAT,GAAkB,CAAxB,EAA0B;;AAEtB,iBAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIe,SAASd,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;AACtC,qBAAKgB,eAAL,CAAqBD,SAASf,CAAT,EAAYiB,YAAZ,CAAyB,SAAzB,CAArB;AACH;AACJ;;AAED;AACA,YAAIC,IAAJ;AACA,eAAOA,OAAO,KAAKf,QAAL,CAAcgB,KAAd,EAAd,EAAqC,CAEpC;;AAEDC,gBAAQC,GAAR,CAAY,sBAAZ;;AAEA;AACA,aAAI,IAAIC,QAAQ,CAAhB,EAAmBA,QAAM,KAAK3C,QAA9B,EAAwC2C,OAAxC,EAAgD;AAC5C,iBAAKC,iBAAL,CAAuBD,KAAvB;AACH;;AAED,aAAKE,sBAAL;;AAEA,aAAKjC,kBAAL;AACH,KAxII;;AA2IL;AACAgC,uBAAkB,2BAASD,KAAT,EAAe;;AAE7B,YAAIG,YAAY,EAAhB;;AAEA,YAAIC,WAAW,KAAKhB,WAAL,GAAmB,CAAC,KAAKN,SAAL,GAAe,KAAKE,SAArB,IAAgCgB,KAAlE;;AAEA,aAAI,IAAItB,IAAI,CAAZ,EAAeA,IAAI,KAAKnB,OAAxB,EAAiCmB,GAAjC,EAAqC;;AAEjC,gBAAI2B,MAAM,KAAKC,WAAL,EAAV;AACAD,gBAAIE,MAAJ,GAAa,IAAb;;AAEAF,gBAAIG,KAAJ,GAAY,KAAK1B,SAAjB;AACAuB,gBAAInB,MAAJ,GAAa,KAAKH,UAAlB;;AAEA,gBAAI0B,QAAQJ,IAAIV,YAAJ,CAAiB,SAAjB,CAAZ;AACAc,kBAAMC,OAAN,GAAgBhE,SAASiE,OAAzB;;AAEAF,kBAAMG,WAAN;;AAEAH,kBAAMI,OAAN,CAAcC,OAAd,GAAwBV,QAAxB;AACAK,kBAAMI,OAAN,CAAcE,OAAd,GAAwB,KAAK9B,UAA7B;AACAwB,kBAAMI,OAAN,CAAcG,KAAd,GAAsB,KAAK7B,aAAL,GAAqB,CAAC,KAAKJ,UAAL,GAAgB,KAAKC,SAAtB,KAAkCN,IAAE,CAApC,CAA3C;AACA+B,kBAAMI,OAAN,CAAcI,IAAd,GAAqBjB,KAArB;AACAS,kBAAMI,OAAN,CAAcK,GAAd,GAAoBxC,CAApB;AACA+B,kBAAMI,OAAN,CAAcM,UAAd,GAA4BvE,GAAGwE,UAAH,KAAgB,CAAjB,GAAsB,CAAjD;;AAEAX,kBAAMY,cAAN;;AAEAhB,gBAAIiB,MAAJ,GAAa,KAAK9D,UAAlB;;AAEA2C,sBAAUoB,IAAV,CAAelB,GAAf;AACH;;AAED,aAAKxB,QAAL,CAAc0C,IAAd,CAAmBpB,SAAnB;AAGH,KAhLI;;AAkLL;AACAqB,uBAAkB,6BAAU;;AAExB;AACA,aAAI,IAAI9C,IAAI,CAAZ,EAAeA,IAAE,KAAKrB,QAAtB,EAAgCqB,GAAhC,EAAoC;;AAEhC,gBAAI0B,WAAW,KAAKhB,WAAL,GAAmB,CAAC,KAAKN,SAAL,GAAe,KAAKE,SAArB,IAAgCN,CAAlE;;AAEA,gBAAI+C,WAAW,KAAK5C,QAAL,CAAcH,CAAd,CAAf;;AAEA,mBAAM+C,SAAS9C,MAAT,GAAkB,KAAKpB,OAA7B,EAAqC;;AAEjC,oBAAImE,UAAU,KAAKpB,WAAL,EAAd;AACAoB,wBAAQnB,MAAR,GAAiB,IAAjB;;AAEA,oBAAIE,QAAQiB,QAAQ/B,YAAR,CAAqB,SAArB,CAAZ;;AAEAc,sBAAMI,OAAN,CAAcC,OAAd,GAAwBV,QAAxB;AACAK,sBAAMI,OAAN,CAAcE,OAAd,GAAwB,KAAK9B,UAA7B;AACAwB,sBAAMI,OAAN,CAAcI,IAAd,GAAqBvC,CAArB;AACA+B,sBAAMI,OAAN,CAAcK,GAAd,GAAoB,CAApB;AACAT,sBAAMI,OAAN,CAAcM,UAAd,GAA4BvE,GAAGwE,UAAH,KAAgB,CAAjB,GAAsB,CAAjD;AACAX,sBAAMY,cAAN;;AAEAK,wBAAQJ,MAAR,GAAiB,KAAK9D,UAAtB;;AAEAiE,yBAASF,IAAT,CAAcG,OAAd;AAEH;;AAKD;;AAEA;AACA,iBAAK,IAAIhD,KAAI,CAAb,EAAgBA,KAAE+C,SAAS9C,MAA3B,EAAmCD,IAAnC,EAAuC;;AAEnC,oBAAIiD,WAAWF,SAAS/C,EAAT,CAAf;AACA,oBAAI+B,SAAQkB,SAAShC,YAAT,CAAsB,SAAtB,CAAZ;;AAEAc,uBAAMI,OAAN,CAAcK,GAAd,GAAoBxC,EAApB;AACA+B,uBAAMI,OAAN,CAAcG,KAAd,GAAsB,KAAK7B,aAAL,GAAqB,CAAC,KAAKJ,UAAL,GAAgB,KAAKC,SAAtB,KAAkCN,KAAE,CAApC,CAA3C;AACH;AACJ;;AAED,aAAKT,kBAAL;;AAEA,YAAG,KAAKL,SAAL,KAAmBjB,WAAWgB,KAAjC,EAAuC;AACnC,iBAAKuC,sBAAL;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KAvQI;;AAyQL;;;AAGAjC,wBAAmB,8BAAY;;AAG3B;;;;AAIA,aAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAE,KAAKrB,QAAvB,EAAiCqB,GAAjC,EAAqC;AACjC,gBAAIkD,OAAO,KAAK/C,QAAL,CAAcH,CAAd,CAAX;;AAEA;AACA,gBAAImD,UAAU,CAAd;AACA,gBAAIC,YAAY,CAAhB;;AAEA;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAE,KAAKxE,OAAtB,EAA+BwE,GAA/B,EAAmC;AAC/B,oBAAI1B,MAAMuB,KAAKG,CAAL,CAAV;;AAEA,oBAAItB,QAAQJ,IAAIV,YAAJ,CAAiB,SAAjB,CAAZ;AACA;;AAEA,oBAAGc,MAAMuB,IAAN,CAAWC,CAAX,KAAiBxB,MAAMI,OAAN,CAAcG,KAAlC,EAAwC;;AAEpC;;;;AAIA,wBAAI,KAAKpD,SAAL,KAAmBjB,WAAWgB,KAA/B,IAA0C8C,MAAMuB,IAAN,CAAWC,CAAX,IAAgBxB,MAAMI,OAAN,CAAcE,OAA3E,EAAoF;;AAEhFN,8BAAMI,OAAN,CAAcE,OAAd,GAAwB,KAAK9B,UAAL,GAAkB4C,OAA1C;;AAEApB,8BAAMuB,IAAN,CAAWC,CAAX,GAAexB,MAAMI,OAAN,CAAcE,OAA7B;;AAEAc,kCAAUA,UAAUpB,MAAMuB,IAAN,CAAW9C,MAArB,GAA8B4C,SAAxC;;AAEAA,oCAAYA,YAAY,EAAxB;AACH;;AAED;AACA,wBAAG,KAAKlE,SAAL,KAAmBjB,WAAWqB,IAA9B,IACC,KAAKJ,SAAL,KAAmBjB,WAAWuB,OAD/B,IAEC,KAAKN,SAAL,KAAmBjB,WAAWgB,KAFlC,EAEwC;AACpC8C,8BAAMC,OAAN,GAAgBhE,SAASwF,QAAzB;AACH;AACJ;AACJ;AACJ;AACJ,KA3TI;;AA8TL;AACAC,qBAAgB,yBAASC,IAAT,EAAcC,IAAd,EAAwC;AAAA,YAArBC,aAAqB,uEAAL,IAAK;;;AAEpD,YAAIC,WAAWH,KAAKzC,YAAL,CAAkB,SAAlB,EAA6BkB,OAA5C;AACA,YAAI2B,WAAWH,KAAK1C,YAAL,CAAkB,SAAlB,EAA6BkB,OAA5C;;AAEA,YAAG0B,SAAStB,IAAT,KAAkBuB,SAASvB,IAA9B,EAAmC;AAC/B;AACA,gBAAIW,OAAO,KAAK/C,QAAL,CAAc0D,SAAStB,IAAvB,CAAX;;AAEA;AACA,gBAAIwB,YAAYD,SAASxB,KAAzB;AACAwB,qBAASxB,KAAT,GAAiBuB,SAASvB,KAA1B;AACAuB,qBAASvB,KAAT,GAAiByB,SAAjB;;AAEAL,iBAAKJ,IAAL,CAAUU,SAAV,CAAoB9F,GAAG+F,MAAH,CAAU,GAAV,EAAc/F,GAAGgG,CAAH,CAAKL,SAASzB,OAAd,EAAsByB,SAASvB,KAA/B,CAAd,CAApB;AACAqB,iBAAKL,IAAL,CAAUU,SAAV,CAAoB9F,GAAG+F,MAAH,CAAU,GAAV,EAAc/F,GAAGgG,CAAH,CAAKJ,SAAS1B,OAAd,EAAsB0B,SAASxB,KAA/B,CAAd,CAApB;AACA;AACA;;AAEA;AACA,gBAAI6B,WAAWL,SAAStB,GAAxB;;AAEAsB,qBAAStB,GAAT,GAAeqB,SAASrB,GAAxB;AACAqB,qBAASrB,GAAT,GAAe2B,QAAf;;AAEA,gBAAIC,YAAYlB,KAAKW,SAASrB,GAAd,CAAhB;AACAU,iBAAKW,SAASrB,GAAd,IAAqBU,KAAKY,SAAStB,GAAd,CAArB;AACAU,iBAAKY,SAAStB,GAAd,IAAqB4B,SAArB;AAIH,SA1BD,MA0BM,IAAGP,SAASrB,GAAT,KAAiBsB,SAAStB,GAA7B,EAAiC;AACnC;AACA,gBAAI6B,QAAQ,KAAKlE,QAAL,CAAc0D,SAAStB,IAAvB,CAAZ;AACA,gBAAI+B,QAAQ,KAAKnE,QAAL,CAAc2D,SAASvB,IAAvB,CAAZ;;AAEA;AACA,gBAAIgC,cAAcT,SAAS1B,OAA3B;AACA0B,qBAAS1B,OAAT,GAAmByB,SAASzB,OAA5B;AACAyB,qBAASzB,OAAT,GAAmBmC,WAAnB;;AAEAb,iBAAKJ,IAAL,CAAUU,SAAV,CAAoB9F,GAAG+F,MAAH,CAAU,GAAV,EAAc/F,GAAGgG,CAAH,CAAKL,SAASzB,OAAd,EAAsByB,SAASvB,KAA/B,CAAd,CAApB;AACAqB,iBAAKL,IAAL,CAAUU,SAAV,CAAoB9F,GAAG+F,MAAH,CAAU,GAAV,EAAc/F,GAAGgG,CAAH,CAAKJ,SAAS1B,OAAd,EAAsB0B,SAASxB,KAA/B,CAAd,CAApB;AACA;AACA;;AAEA;AACA,gBAAIkC,YAAYV,SAASvB,IAAzB;AACAuB,qBAASvB,IAAT,GAAgBsB,SAAStB,IAAzB;AACAsB,qBAAStB,IAAT,GAAgBiC,SAAhB;;AAEA,gBAAIC,YAAYZ,SAASrB,GAAzB;AACA,gBAAI4B,aAAYC,MAAMI,SAAN,CAAhB;AACAJ,kBAAMI,SAAN,IAAmBH,MAAMG,SAAN,CAAnB;AACAH,kBAAMG,SAAN,IAAmBL,UAAnB;AACH;;AAGD,YAAGR,aAAH,EAAiB;;AAEb,gBAAIc,WAAW,KAAKlD,sBAAL,EAAf;;AAEA,gBAAG,CAACkD,QAAJ,EAAa;;AAET;AACAtD,wBAAQC,GAAR,CAAY,MAAZ;AACAsD,2BAAW,YAAW;AACtB,yBAAKlB,eAAL,CAAqBE,IAArB,EAA0BD,IAA1B,EAA+B,KAA/B;AACC,iBAFU,CAETkB,IAFS,CAEJ,IAFI,CAAX,EAEc,GAFd;AAGH;AACJ;AACJ,KAtYI;;AAwYL;AACApD,4BAAuB,kCAAU;;AAE7B,YAAIqD,YAAY,EAAhB;;AAEA;AACA,aAAK,IAAI7E,IAAI,CAAb,EAAgBA,IAAE,KAAKrB,QAAvB,EAAiCqB,GAAjC,EAAqC;AACjC,gBAAIkD,OAAO,KAAK/C,QAAL,CAAcH,CAAd,CAAX;AACA,gBAAI8E,WAAW,EAAf;AACA,gBAAIC,UAAU,IAAd;AACA,iBAAI,IAAI1B,IAAI,CAAZ,EAAeA,IAAE,KAAKxE,OAAtB,EAA+BwE,GAA/B,EAAmC;AAC/B,oBAAI1B,MAAMuB,KAAKG,CAAL,CAAV;AACA,oBAAG,CAAC0B,OAAJ,EAAY;AACRA,8BAAUpD,GAAV;AACAmD,6BAASjC,IAAT,CAAclB,GAAd;AACH,iBAHD,MAGK;AACD,wBAAIqD,WAAWD,QAAQ9D,YAAR,CAAqB,SAArB,EAAgCkB,OAA/C;AACA,wBAAIc,WAAWtB,IAAIV,YAAJ,CAAiB,SAAjB,EAA4BkB,OAA3C;;AAEA,wBAAI8C,QAAQ,KAAZ;AACA,wBAAGD,SAASvC,UAAT,KAAwBQ,SAASR,UAApC,EAA+C;AAC3CqC,iCAASjC,IAAT,CAAclB,GAAd;AACA,4BAAG0B,MAAO,KAAKxE,OAAL,GAAa,CAAvB,EAA0B;AACtBoG,oCAAQ,IAAR;AACH;AACJ,qBALD,MAKK;AACDA,gCAAQ,IAAR;AACH;;AAED,wBAAGA,KAAH,EAAS;AACL,4BAAGH,SAAS7E,MAAT,IAAmB,CAAtB,EAAwB;AACpB;AACAN,kCAAMC,SAAN,CAAgBiD,IAAhB,CAAqBqC,KAArB,CAA2BL,SAA3B,EAAqCC,QAArC;AAEH;AACD;AACAA,mCAAW,EAAX;;AAEAC,kCAAUpD,GAAV;AACAmD,iCAASjC,IAAT,CAAclB,GAAd;AACH;AACJ;AACJ;AACJ;;AAGD,iBAASwD,kBAAT,CAA4BjE,IAA5B,EAAiC;AAC7B,iBAAI,IAAIlB,MAAI,CAAZ,EAAeA,MAAE6E,UAAU5E,MAA3B,EAAmCD,KAAnC,EAAuC;AACnC,oBAAG6E,UAAU7E,GAAV,EAAaiB,YAAb,CAA0B,SAA1B,EAAqCkB,OAArC,CAA6CiD,EAA7C,KAAoDlE,KAAKD,YAAL,CAAkB,SAAlB,EAA6BkB,OAA7B,CAAqCiD,EAA5F,EAA+F;AAC3F,2BAAO,IAAP;AACH;AACJ;AACD,mBAAO,KAAP;AACH;;AAED;AACA,aAAK,IAAIpF,MAAI,CAAb,EAAgBA,MAAE,KAAKnB,OAAvB,EAAgCmB,KAAhC,EAAoC;;AAEhC,gBAAI8E,YAAW,EAAf;AACA,gBAAIC,WAAU,IAAd;AACA,iBAAI,IAAI1B,KAAI,CAAZ,EAAeA,KAAE,KAAK1E,QAAtB,EAAgC0E,IAAhC,EAAoC;AAChC,oBAAI1B,OAAM,KAAKxB,QAAL,CAAckD,EAAd,EAAiBrD,GAAjB,CAAV;AACA,oBAAG,CAAC+E,QAAJ,EAAY;AACRA,+BAAUpD,IAAV;AACAmD,8BAASjC,IAAT,CAAclB,IAAd;AACH,iBAHD,MAGK;AACD,wBAAIqD,YAAWD,SAAQ9D,YAAR,CAAqB,SAArB,EAAgCkB,OAA/C;AACA,wBAAIc,YAAWtB,KAAIV,YAAJ,CAAiB,SAAjB,EAA4BkB,OAA3C;;AAEA,wBAAI8C,SAAQ,KAAZ;AACA,wBAAGD,UAASvC,UAAT,KAAwBQ,UAASR,UAApC,EAA+C;AAC3CqC,kCAASjC,IAAT,CAAclB,IAAd;AACA,4BAAG0B,OAAO,KAAK1E,QAAL,GAAc,CAAxB,EAA2B;AACvBsG,qCAAQ,IAAR;AACH;AACJ,qBALD,MAKK;AACDA,iCAAQ,IAAR;AACH;;AAED,wBAAGA,MAAH,EAAS;AACL,4BAAGH,UAAS7E,MAAT,IAAmB,CAAtB,EAAwB;AACpB;AACA6E,sCAASO,OAAT,CAAiB,UAASC,IAAT,EAAc;;AAE3B,oCAAG,CAACH,mBAAmBG,IAAnB,CAAJ,EAA6B;AACzBT,8CAAUhC,IAAV,CAAeyC,IAAf;AACH;AAGJ,6BAPD;AASH;AACD;AACAR,oCAAW,EAAX;;AAEAC,mCAAUpD,IAAV;AACAmD,kCAASjC,IAAT,CAAclB,IAAd;AACH;AACJ;AACJ;AACJ;;AAGD,YAAGkD,UAAU5E,MAAV,GAAmB,CAAtB,EAAwB;;AAEpB,gBAAIsF,qBAAqB,IAAzB;AACA,gBAAG,KAAKrG,SAAL,KAAmBjB,WAAWgB,KAAjC,EAAuC;AACnC;AACAsG,qCAAqB,KAArB;AACH;;AAKD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA,iBAAKC,QAAL,CAAc,YAAY;;AAEtB;AACAX,0BAAUQ,OAAV,CAAkB,UAASC,IAAT,EAAc;;AAE5B,yBAAKtE,eAAL,CAAqBsE,KAAKrE,YAAL,CAAkB,SAAlB,CAArB;AAEH,iBAJiB,CAIhB2D,IAJgB,CAIX,IAJW,CAAlB;;AAMA;AACA,oBAAGW,kBAAH,EAAsB;AAClB;AACA,yBAAKrG,SAAL,GAAiBjB,WAAWuB,OAA5B;AACH;;AAED,qBAAKsD,iBAAL;AAEH,aAjBa,CAiBZ8B,IAjBY,CAiBP,IAjBO,CAAd,EAiBaW,qBAAmB,GAAnB,GAAuB,CAjBpC,EAiBsC,KAjBtC;;AAmBA,mBAAO,IAAP;AACH;;AAED,aAAKrG,SAAL,GAAiBjB,WAAWqB,IAA5B;;AAEA,eAAO,KAAP;AACH,KAriBI;;AA6iBLsC,iBAAY,uBAAU;;AAElB,YAAID,MAAM,IAAV;AACA,YAAG,KAAKf,OAAL,CAAa6E,IAAb,KAAsB,CAAzB,EAA2B;AACvB9D,kBAAM,KAAKf,OAAL,CAAazB,GAAb,EAAN;AACH,SAFD,MAEK;AACDwC,kBAAMzD,GAAGwH,WAAH,CAAe,KAAKnH,UAApB,CAAN;AACAoD,gBAAIV,YAAJ,CAAiB,SAAjB,EAA4B0E,IAA5B;AACH;;AAED,eAAOhE,GAAP;AACH,KAxjBI;;AA0jBLX,qBAAgB,yBAASW,GAAT,EAAa;;AAEzB,YAAIuB,OAAO,KAAK/C,QAAL,CAAcwB,IAAIQ,OAAJ,CAAYI,IAA1B,CAAX;;AAEAW,aAAKrD,aAAL,CAAmBqD,IAAnB,EAAwBvB,IAAI2B,IAA5B;;AAEA,aAAK1C,OAAL,CAAagF,GAAb,CAAiBjE,IAAI2B,IAArB;AACH,KAjkBI;;AAwkBL;AACAuC,YAAQ,gBAAUC,EAAV,EAAc;;AAElB,YAAG,KAAK5G,SAAL,KAAmBjB,WAAWuB,OAAjC,EAAyC;AACrC;;AAEA,gBAAIuG,OAAO,IAAX;;AAEA,gBAAG,KAAKtG,YAAL,KAAsB,EAAzB,EAA4B;;AAExB,qBAAKA,YAAL,GAAoB,CAApB;;AAEA2B,wBAAQC,GAAR,CAAY,oCAAZ;;AAEA,qBAAK,IAAIrB,IAAI,CAAb,EAAgBA,IAAE+F,KAAKpH,QAAvB,EAAiCqB,GAAjC,EAAsC;AAClC,wBAAIkD,OAAO6C,KAAK5F,QAAL,CAAcH,CAAd,CAAX;;AAEA,yBAAK,IAAIqD,IAAI,CAAb,EAAgBA,IAAI0C,KAAKlH,OAAzB,EAAkCwE,GAAlC,EAAuC;AACnC,4BAAI1B,MAAMuB,KAAKG,CAAL,CAAV;AACA,4BAAI2C,UAAUrE,IAAIV,YAAJ,CAAiB,SAAjB,CAAd;AACA,4BAAG+E,QAAQhE,OAAR,KAAoBhE,SAASiI,OAAhC,EAAwC;AACpC;AACH;AACJ;AACJ;;AAGD7E,wBAAQC,GAAR,CAAY,gCAAZ;;AAEA,qBAAKnC,SAAL,GAAiBjB,WAAWqB,IAA5B;AACAyG,qBAAKvE,sBAAL;AACH;;AAED,iBAAK/B,YAAL,IAAqB,CAArB;AACH;AAEJ;AA5mBI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "\r\n\r\nvar BoxDrop = require(\"BoxDrop\");\r\nvar BoxItem = require(\"BoxItem\");\r\nvar BoxState = require(\"States\").BoxState;\r\nvar Game_State = require(\"States\").Game_State;\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        box_prefab:{\r\n            default:null,\r\n            type:cc.Prefab,\r\n        },\r\n\r\n        num_rank:{\r\n            default:10,\r\n            tooltip:\"列数\"\r\n        },\r\n\r\n        num_row:{\r\n            default:10,\r\n            tooltip:\"行数\"\r\n        },\r\n\r\n        super_node:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n\r\n        _gameState:{\r\n            default:Game_State.Start,\r\n            type:Game_State,\r\n        },\r\n\r\n        gamestate:{\r\n            get:function () {\r\n                return this._gameState;\r\n            },\r\n            set:function (value) {\r\n\r\n                if(this._gameState !== value){\r\n                    this._gameState = value;\r\n                    if(value === Game_State.Play){\r\n                        //开始掉落\r\n                        this.updateBeginOriginY();\r\n                    }else  if(value === Game_State.Filling){\r\n                        this.fillInterval = 0;\r\n                    }\r\n\r\n                }\r\n            },\r\n            type:Game_State\r\n        },\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n        Array.prototype.removeByValue = function(arr,val){\r\n\r\n            for (var i = 0; i<arr.length; i++){\r\n                if(arr[i] === val){\r\n                    arr.splice(i,1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n        // Array.prototype.filterRepeat = function(){  \r\n        //     //直接定义结果数组  \r\n        //     var arr = [];\r\n        //     if(arr.length > 0){\r\n        //         arr.push(this[0]);\r\n        //     }\r\n\r\n        //     for(var i = 1; i < this.length; i++){    //从数组第二项开始循环遍历此数组  \r\n        //         //对元素进行判断：  \r\n        //         //如果数组当前元素在此数组中第一次出现的位置不是i  \r\n        //         //那么我们可以判断第i项元素是重复的，否则直接存入结果数组  \r\n        //         if(this.indexOf(this[i]) == i){  \r\n        //             arr.push(this[i]);  \r\n        //         }  \r\n        //     }  \r\n        //     return arr;  \r\n        // }  \r\n\r\n        this.rankList = [];\r\n\r\n        this.itemWidth = 100;\r\n        this.itemHeight = 100;\r\n\r\n        this.itemSpace = 5;\r\n\r\n        //this.margin_top = -(cc.director.getWinSize().height)*0.5 + this.itemHeight*this.num_row + this.itemSpace * (this.num_row - 1) + this.itemHeight*0.5;\r\n        //this.margin_bottom = -(cc.director.getWinSize().height)*0.5 - this.itemHeight*0.5;\r\n\r\n        this.margin_top = -(this.super_node.height)*0.5 + this.itemHeight*this.num_row + this.itemSpace * (this.num_row - 1) + this.itemHeight*0.5;\r\n        this.margin_bottom = -(this.super_node.height)*0.5 - this.itemHeight*0.5;\r\n\r\n        this.margin_left =  -this.itemWidth*this.num_rank*0.5 + this.itemSpace*(this.num_rank*0.5-1);\r\n        this.margin_right = this.itemWidth * this.num_rank * 0.5 - this.itemSpace * (this.num_rank * 0.5 - 1);\r\n\r\n        //console.log(\"asds  \" + this.margin_top+\"  \"+this.margin_bottom);\r\n\r\n        this.boxPool = new cc.NodePool(\"BoxDrop\");\r\n\r\n        this.replayGame();\r\n    },\r\n\r\n    //重新开始游戏\r\n    replayGame:function(){\r\n\r\n        this.gamestate = Game_State.Start;\r\n\r\n        var children = this.super_node.children;\r\n\r\n        while(children.length > 0){\r\n            \r\n            for (var i = 0; i < children.length; ++i) {\r\n                this.boxDrop_destroy(children[i].getComponent(\"BoxDrop\"));\r\n            }            \r\n        }\r\n\r\n        //清空ranklist\r\n        var item;\r\n        while (item = this.rankList.shift()) {\r\n            \r\n        }\r\n\r\n        console.log(\"清空成==========功======\");\r\n\r\n        //创建所有面板的数据\r\n        for(let index = 0; index<this.num_rank; index++){\r\n            this.createRankContent(index);\r\n        }\r\n\r\n        this.checkPanelEliminatable();\r\n\r\n        this.updateBeginOriginY();\r\n    },\r\n\r\n\r\n    //创建每一列的数据\r\n    createRankContent:function(index){\r\n\r\n        let rank_list = [];\r\n\r\n        let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*index;\r\n         \r\n        for(let i = 0; i < this.num_row; i++){\r\n\r\n            let box = this.boxDrop_get();\r\n            box.active = true;\r\n\r\n            box.width = this.itemWidth;\r\n            box.height = this.itemHeight;\r\n\r\n            let box_c = box.getComponent(\"BoxDrop\");\r\n            box_c.state_b = BoxState.ENormal;\r\n\r\n            box_c.initBoxItem();\r\n\r\n            box_c.boxItem.begin_x = origin_x;\r\n            box_c.boxItem.begin_y = this.margin_top;\r\n            box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n            box_c.boxItem.rank = index;\r\n            box_c.boxItem.row = i;\r\n            box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n\r\n            box_c.resetOriginPos();\r\n\r\n            box.parent = this.super_node;\r\n\r\n            rank_list.push(box);\r\n        }\r\n\r\n        this.rankList.push(rank_list);\r\n\r\n\r\n    },\r\n\r\n    //更新所有列 end y的数据\r\n    updateAllRankEndY:function(){\r\n\r\n        //看该列的数量是否 小于 this.num_row  少于的话则补充\r\n        for(let i = 0; i<this.num_rank; i++){\r\n\r\n            let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*i;\r\n\r\n            let list_sub = this.rankList[i];\r\n            \r\n            while(list_sub.length < this.num_row){\r\n\r\n                let new_box = this.boxDrop_get();\r\n                new_box.active = true;\r\n\r\n                let box_c = new_box.getComponent(\"BoxDrop\");\r\n\r\n                box_c.boxItem.begin_x = origin_x;\r\n                box_c.boxItem.begin_y = this.margin_top;\r\n                box_c.boxItem.rank = i;\r\n                box_c.boxItem.row = 0;\r\n                box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n                box_c.resetOriginPos();\r\n\r\n                new_box.parent = this.super_node;\r\n\r\n                list_sub.push(new_box);\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            // let list = this.rankList[index];\r\n\r\n            //更新每个元素的end y 位置\r\n            for (let i = 0; i<list_sub.length; i++){\r\n\r\n                let item_box = list_sub[i];\r\n                let box_c = item_box.getComponent(\"BoxDrop\");\r\n\r\n                box_c.boxItem.row = i;\r\n                box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n            }\r\n        }\r\n\r\n        this.updateBeginOriginY();\r\n\r\n        if(this.gamestate === Game_State.Start){\r\n            this.checkPanelEliminatable();\r\n        }\r\n        // else if(this.gamestate === Game_State.Filling){\r\n        //     // cc.director.getScheduler().schedule(callback, this, interval, !this._isRunning);\r\n        //\r\n        //     let self = this;\r\n        //\r\n        //     this.callBackFilling = function () {\r\n        //\r\n        //         console.log(\"======定时器刷了=====\");\r\n        //\r\n        //         for (let i = 0; i<self.num_rank; i++) {\r\n        //             let list = self.rankList[i];\r\n        //\r\n        //             for (let j = 0; j < self.num_row; j++) {\r\n        //                 let box = list[j];\r\n        //                 let box_c_i = box.getComponent(\"BoxDrop\");\r\n        //                 if(box_c_i.state_b !== BoxState.EFalled){\r\n        //                     return;\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //\r\n        //         console.log(\"=========检测是否开消除=========\");\r\n        //\r\n        //         self.unschedule(self.callBackFilling);\r\n        //\r\n        //         self.checkPanelEliminatable();\r\n        //     }\r\n        //\r\n        //\r\n        //     //判断他是否所有方块已掉落到指定位置\r\n        //     //这边如果bind this的话 定时器停不下来\r\n        //     this.schedule(this.callBackFilling,0.2);\r\n        // }\r\n\r\n    },\r\n\r\n    /**\r\n     * 更新每一列他们中的每个元素的初始的origin y的值\r\n     */\r\n    updateBeginOriginY:function () {\r\n\r\n\r\n        /**\r\n         * 某一列中 从最后开始遍历返回\r\n         * 算出开始掉了的位置\r\n         */\r\n        for (let i = 0; i<this.num_rank; i++){\r\n            let list = this.rankList[i];\r\n\r\n            //判断是否 已达到他的endy 如果还未达到就是 正要掉落\r\n            let off_top = 0;\r\n            let space_top = 5;\r\n\r\n            // for(let j = this.num_row-1; j>=0; j--){\r\n            for(let j = 0; j<this.num_row; j++){\r\n                let box = list[j];\r\n\r\n                let box_c = box.getComponent(\"BoxDrop\");\r\n                //box_c.boxItem.begin_y = this.margin_top;\r\n\r\n                if(box_c.node.y !== box_c.boxItem.end_y){\r\n\r\n                    /**\r\n                     * 1.实例游戏的时候 初始开始的位置\r\n                     * 2.消除的 方块不在界面中的设置他的开始位置 已在界面中的不去设置他\r\n                     */\r\n                    if((this.gamestate === Game_State.Start) || (box_c.node.y >= box_c.boxItem.begin_y)){\r\n\r\n                        box_c.boxItem.begin_y = this.margin_top + off_top;\r\n\r\n                        box_c.node.y = box_c.boxItem.begin_y;\r\n\r\n                        off_top = off_top + box_c.node.height + space_top;\r\n\r\n                        space_top = space_top + 10;\r\n                    }\r\n\r\n                    //是要掉落的\r\n                    if(this.gamestate === Game_State.Play ||\r\n                        this.gamestate === Game_State.Filling ||\r\n                        this.gamestate === Game_State.Start){\r\n                        box_c.state_b = BoxState.EFalling;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    \r\n    //交换两个方块的位置\r\n    exchangeBoxItem:function(box1,box2,toCheckViable = true){\r\n\r\n        let boxItem1 = box1.getComponent(\"BoxDrop\").boxItem;\r\n        let boxItem2 = box2.getComponent(\"BoxDrop\").boxItem;\r\n\r\n        if(boxItem1.rank === boxItem2.rank){\r\n            //同一列的\r\n            let list = this.rankList[boxItem1.rank];\r\n\r\n            //交换位置\r\n            let temp_endy = boxItem2.end_y;\r\n            boxItem2.end_y = boxItem1.end_y;\r\n            boxItem1.end_y = temp_endy;\r\n\r\n            box1.node.runAction(cc.moveTo(0.2,cc.p(boxItem1.begin_x,boxItem1.end_y)));\r\n            box2.node.runAction(cc.moveTo(0.2,cc.p(boxItem2.begin_x,boxItem2.end_y)));\r\n            // box1.node.y = boxItem1.end_y;\r\n            // box2.node.y = boxItem2.end_y;\r\n\r\n            //交换信息\r\n            let temp_row = boxItem2.row;\r\n\r\n            boxItem2.row = boxItem1.row;\r\n            boxItem1.row = temp_row;            \r\n\r\n            let temp_node = list[boxItem1.row];\r\n            list[boxItem1.row] = list[boxItem2.row];\r\n            list[boxItem2.row] = temp_node;\r\n\r\n\r\n\r\n        }else if(boxItem1.row === boxItem2.row){\r\n            //同一行的\r\n            let list1 = this.rankList[boxItem1.rank];\r\n            let list2 = this.rankList[boxItem2.rank];\r\n\r\n            //交换位置\r\n            let temp_beginx = boxItem2.begin_x;\r\n            boxItem2.begin_x = boxItem1.begin_x;\r\n            boxItem1.begin_x = temp_beginx;\r\n\r\n            box1.node.runAction(cc.moveTo(0.2,cc.p(boxItem1.begin_x,boxItem1.end_y)));\r\n            box2.node.runAction(cc.moveTo(0.2,cc.p(boxItem2.begin_x,boxItem2.end_y)));\r\n            // box1.node.y = boxItem1.end_y;\r\n            // box2.node.y = boxItem2.end_y;\r\n\r\n            //交换信息\r\n            let temp_rank = boxItem2.rank;\r\n            boxItem2.rank = boxItem1.rank;\r\n            boxItem1.rank = temp_rank;\r\n\r\n            let row_index = boxItem1.row;\r\n            let temp_node = list1[row_index];\r\n            list1[row_index] = list2[row_index];\r\n            list2[row_index] = temp_node;\r\n        }\r\n\r\n        \r\n        if(toCheckViable){\r\n\r\n            let isViable = this.checkPanelEliminatable();\r\n\r\n            if(!isViable){\r\n\r\n                //不可消除的话 位置再互换回来\r\n                console.log(\"不可消除\");\r\n                setTimeout(function() {\r\n                this.exchangeBoxItem(box2,box1,false);\r\n                }.bind(this), 300);\r\n            }\r\n        }\r\n    },\r\n\r\n    //检测面板所有方块 是否可消除\r\n    checkPanelEliminatable:function(){\r\n\r\n        let wipe_list = [];\r\n\r\n        //判断列 是否有三个以及三个以上的一样的色块连在一起\r\n        for (let i = 0; i<this.num_rank; i++){\r\n            let list = this.rankList[i];\r\n            let tempList = [];\r\n            let pre_box = null;\r\n            for(let j = 0; j<this.num_row; j++){\r\n                let box = list[j];\r\n                if(!pre_box){\r\n                    pre_box = box;\r\n                    tempList.push(box);\r\n                }else{\r\n                    let item_pre = pre_box.getComponent(\"BoxDrop\").boxItem;\r\n                    let item_box = box.getComponent(\"BoxDrop\").boxItem;\r\n\r\n                    let toAdd = false;\r\n                    if(item_pre.color_type === item_box.color_type){\r\n                        tempList.push(box);\r\n                        if(j === (this.num_row-1)){\r\n                            toAdd = true;\r\n                        }\r\n                    }else{\r\n                        toAdd = true;\r\n                    }\r\n\r\n                    if(toAdd){\r\n                        if(tempList.length >= 3){\r\n                            //追加到wipe里面\r\n                            Array.prototype.push.apply(wipe_list,tempList);\r\n\r\n                        }\r\n                        //清空数组\r\n                        tempList = [];\r\n\r\n                        pre_box = box;\r\n                        tempList.push(box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        function isRepeatItemInWipe(item){\r\n            for(let i = 0; i<wipe_list.length; i++){\r\n                if(wipe_list[i].getComponent(\"BoxDrop\").boxItem.id === item.getComponent(\"BoxDrop\").boxItem.id){\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        //判断行 是否有三个以及三个以上的一样的色块连在一起\r\n        for (let i = 0; i<this.num_row; i++){\r\n            \r\n            let tempList = [];\r\n            let pre_box = null;\r\n            for(let j = 0; j<this.num_rank; j++){\r\n                let box = this.rankList[j][i];\r\n                if(!pre_box){\r\n                    pre_box = box;\r\n                    tempList.push(box);\r\n                }else{\r\n                    let item_pre = pre_box.getComponent(\"BoxDrop\").boxItem;\r\n                    let item_box = box.getComponent(\"BoxDrop\").boxItem;\r\n\r\n                    let toAdd = false;\r\n                    if(item_pre.color_type === item_box.color_type){\r\n                        tempList.push(box);\r\n                        if(j === (this.num_rank-1)){\r\n                            toAdd = true;\r\n                        }\r\n                    }else{\r\n                        toAdd = true;\r\n                    }\r\n\r\n                    if(toAdd){\r\n                        if(tempList.length >= 3){\r\n                            //追加到wipe里面\r\n                            tempList.forEach(function(elem){\r\n\r\n                                if(!isRepeatItemInWipe(elem)){\r\n                                    wipe_list.push(elem);\r\n                                }\r\n\r\n\r\n                            });\r\n\r\n                        }\r\n                        //清空数组\r\n                        tempList = [];\r\n\r\n                        pre_box = box;\r\n                        tempList.push(box);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if(wipe_list.length > 0){\r\n\r\n            let showDelayAnimation = true;\r\n            if(this.gamestate === Game_State.Start){\r\n                //不显示消除动画\r\n                showDelayAnimation = false;\r\n            }\r\n\r\n\r\n\r\n\r\n            //#warn\r\n            //这一块 逻辑 有问题\r\n\r\n            // if(showDelayAnimation) {\r\n            //     this.schedule(function () {\r\n            //         //状态设置成是摧毁\r\n            //         wipe_list.forEach(function (elem) {\r\n            //\r\n            //             let box = elem.getComponent(\"BoxDrop\");\r\n            //             box.state_b = BoxState.EDestroy;\r\n            //\r\n            //         }.bind(this));\r\n            //     }, 0.3, 1);\r\n            // }\r\n\r\n\r\n\r\n            //不是初始化的 停留一会儿再消除\r\n            this.schedule(function () {\r\n\r\n                //消除掉\r\n                wipe_list.forEach(function(elem){\r\n\r\n                    this.boxDrop_destroy(elem.getComponent(\"BoxDrop\"));\r\n\r\n                }.bind(this));\r\n\r\n                //有销毁在掉落\r\n                if(showDelayAnimation){\r\n                    //正在掉落填充\r\n                    this.gamestate = Game_State.Filling;\r\n                }\r\n\r\n                this.updateAllRankEndY();\r\n\r\n            }.bind(this),showDelayAnimation?0.6:0,false);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.gamestate = Game_State.Play;\r\n\r\n        return false;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    boxDrop_get:function(){\r\n\r\n        let box = null;\r\n        if(this.boxPool.size() > 0){\r\n            box = this.boxPool.get();\r\n        }else{\r\n            box = cc.instantiate(this.box_prefab);\r\n            box.getComponent(\"BoxDrop\").init();\r\n        }\r\n\r\n        return box;\r\n    },\r\n\r\n    boxDrop_destroy:function(box){\r\n\r\n        let list = this.rankList[box.boxItem.rank];\r\n        \r\n        list.removeByValue(list,box.node);\r\n\r\n        this.boxPool.put(box.node);\r\n    },\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n\r\n        if(this.gamestate === Game_State.Filling){\r\n            // cc.director.getScheduler().schedule(callback, this, interval, !this._isRunning);\r\n\r\n            let self = this;\r\n\r\n            if(this.fillInterval === 10){\r\n\r\n                this.fillInterval = 0;\r\n\r\n                console.log(\"======定时开始判断是否都已掉落到底部了 begin =====\");\r\n\r\n                for (let i = 0; i<self.num_rank; i++) {\r\n                    let list = self.rankList[i];\r\n\r\n                    for (let j = 0; j < self.num_row; j++) {\r\n                        let box = list[j];\r\n                        let box_c_i = box.getComponent(\"BoxDrop\");\r\n                        if(box_c_i.state_b !== BoxState.EFalled){\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                console.log(\"=========检测是否开消除 end =========\");\r\n\r\n                this.gamestate = Game_State.Play;\r\n                self.checkPanelEliminatable();\r\n            }\r\n\r\n            this.fillInterval += 1;\r\n        }\r\n\r\n    },\r\n});\r\n\r\n\r\n"
  ]
}