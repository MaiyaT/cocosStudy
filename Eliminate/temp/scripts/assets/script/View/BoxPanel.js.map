{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "BoxDrop",
    "require",
    "BoxItem",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "box_prefab",
    "default",
    "type",
    "Prefab",
    "num_rank",
    "tooltip",
    "num_row",
    "super_node",
    "Node",
    "onLoad",
    "Array",
    "prototype",
    "removeByValue",
    "arr",
    "val",
    "i",
    "length",
    "splice",
    "rankList",
    "itemWidth",
    "itemHeight",
    "itemSpace",
    "margin_top",
    "director",
    "getWinSize",
    "height",
    "margin_bottom",
    "margin_left",
    "margin_right",
    "boxPool",
    "NodePool",
    "creaePanleContent",
    "index",
    "createRankContent",
    "rank_list",
    "origin_x",
    "box",
    "boxDrop_get",
    "active",
    "width",
    "box_c",
    "getComponent",
    "initBoxItem",
    "boxItem",
    "begin_x",
    "begin_y",
    "end_y",
    "rank",
    "row",
    "color_type",
    "random0To1",
    "resetOriginPos",
    "parent",
    "push",
    "updateRankEndY",
    "list_sub",
    "new_box",
    "old_box",
    "list",
    "size",
    "get",
    "instantiate",
    "boxDrop_destroy",
    "node",
    "put"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "\r\n\r\nvar BoxDrop = require(\"BoxDrop\");\r\nvar BoxItem = require(\"BoxItem\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n\r\n        box_prefab:{\r\n            default:null,\r\n            type:cc.Prefab,\r\n        },\r\n\r\n        num_rank:{\r\n            default:10,\r\n            tooltip:\"列数\"\r\n        },\r\n\r\n        num_row:{\r\n            default:20,\r\n            tooltip:\"行数\"\r\n        },\r\n\r\n        super_node:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n        Array.prototype.removeByValue = function(arr,val){\r\n\r\n            for (var i = 0; i<arr.length; i++){\r\n                if(arr[i] === val){\r\n                    arr.splice(i,1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.rankList = [];\r\n\r\n        this.itemWidth = 100;\r\n        this.itemHeight = 100;\r\n\r\n        this.itemSpace = 5;\r\n\r\n        this.margin_top = (cc.director.getWinSize().height)*0.5 + this.itemHeight*0.5;\r\n        this.margin_bottom = -(cc.director.getWinSize().height)*0.5 - this.itemHeight*0.5;\r\n        this.margin_left =  -this.itemWidth*this.num_rank*0.5 + this.itemSpace*(this.num_rank*0.5-1);\r\n        this.margin_right = this.itemWidth*this.num_rank*0.5 - this.itemSpace*(this.num_rank*0.5-1);\r\n\r\n        //console.log(\"asds  \" + this.margin_top+\"  \"+this.margin_bottom);\r\n\r\n        this.boxPool = new cc.NodePool(\"BoxDrop\");\r\n\r\n        this.creaePanleContent();\r\n    },\r\n\r\n    //创建所有面板的数据\r\n    creaePanleContent:function(){\r\n\r\n        for(let index = 0; index<this.num_rank; index++){\r\n            this.createRankContent(index);\r\n        }\r\n\r\n    },\r\n\r\n    //创建每一列的数据\r\n    createRankContent:function(index){\r\n\r\n        var rank_list = [];\r\n\r\n        let origin_x = this.margin_left + (this.itemWidth+this.itemSpace)*index;\r\n         \r\n        for(let i = 0; i < this.num_row; i++){\r\n\r\n            let box = this.boxDrop_get();\r\n            box.active = true;\r\n\r\n            box.width = this.itemWidth;\r\n            box.height = this.itemHeight;\r\n\r\n            let box_c = box.getComponent(\"BoxDrop\");\r\n            box_c.initBoxItem();\r\n\r\n            box_c.boxItem.begin_x = origin_x;\r\n            box_c.boxItem.begin_y = this.margin_top;\r\n            box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n            box_c.boxItem.rank = index;\r\n            box_c.boxItem.row = i;\r\n            box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n\r\n            box_c.resetOriginPos();\r\n\r\n            box.parent = this.super_node;\r\n\r\n            rank_list.push(box);\r\n        }\r\n\r\n        this.rankList.push(rank_list);\r\n    },\r\n\r\n\r\n    //更新某一列 end y的数据\r\n    updateRankEndY:function(box){\r\n\r\n        //看该列的数量是否 小于 this.num_row  少于的话则补充\r\n        for(let i = 0; i<this.rankList.length; i++){\r\n\r\n            let list_sub = this.rankList[i];\r\n            \r\n            while(list_sub.length < this.num_row){\r\n\r\n                let new_box = this.boxDrop_get();\r\n                new_box.active = true;\r\n\r\n                let box_c = new_box.getComponent(\"BoxDrop\");\r\n                let old_box = box.getComponent(\"BoxDrop\");\r\n                \r\n                box_c.boxItem.begin_x = old_box.boxItem.begin_x;\r\n                box_c.boxItem.begin_y = old_box.boxItem.begin_y;\r\n                box_c.boxItem.rank = old_box.boxItem.rank;\r\n                box_c.boxItem.row = old_box.boxItem.row;\r\n                box_c.boxItem.color_type = (cc.random0To1()*5) | 0;\r\n                box_c.resetOriginPos();\r\n\r\n                new_box.parent = this.super_node;\r\n\r\n                list_sub.push(new_box);\r\n            }\r\n        }\r\n\r\n        let list = this.rankList[box.boxItem.rank];\r\n\r\n        //更新每个元素的end y 位置\r\n        for (let i = 0; i<list.length; i++){\r\n\r\n            let box = list[i];\r\n            let box_c = box.getComponent(\"BoxDrop\");\r\n\r\n            box_c.boxItem.end_y = this.margin_bottom + (this.itemHeight+this.itemSpace)*(i+1);\r\n        }\r\n    },\r\n\r\n    \r\n\r\n\r\n    boxDrop_get:function(){\r\n\r\n        let box = null;\r\n        if(this.boxPool.size() > 0){\r\n            box = this.boxPool.get();\r\n        }else{\r\n            box = cc.instantiate(this.box_prefab);\r\n        }\r\n\r\n        return box;\r\n    },\r\n\r\n    boxDrop_destroy:function(box){\r\n\r\n        let list = this.rankList[box.boxItem.rank];\r\n        \r\n        list.removeByValue(list,box.node);\r\n\r\n        this.boxPool.put(box.node);\r\n    },\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}